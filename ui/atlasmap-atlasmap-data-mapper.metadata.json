{"__symbolic":"module","version":4,"metadata":{"DataMapperModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":77,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":79,"character":4},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":80,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":81,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":82,"character":4},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap","name":"TypeaheadModule","line":83,"character":4},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap","name":"TooltipModule","line":84,"character":4},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap","name":"BsDropdownModule","line":85,"character":4},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientXsrfModule","line":86,"character":4},"member":"withOptions"},"arguments":[{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵa"},"member":"xsrf"}]},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap","name":"AlertModule","line":87,"character":4},"member":"forRoot"}}],"declarations":[{"__symbolic":"reference","name":"DataMapperAppComponent"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵz"},{"__symbolic":"reference","name":"ɵba"},{"__symbolic":"reference","name":"ɵbb"},{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","name":"ɵbd"}],"exports":[{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"DataMapperAppComponent"},{"__symbolic":"reference","module":"ngx-bootstrap","name":"AlertModule","line":125,"character":4}],"providers":[{"__symbolic":"reference","name":"DocumentManagementService"},{"__symbolic":"reference","name":"MappingManagementService"},{"__symbolic":"reference","name":"ErrorHandlerService"},{"__symbolic":"reference","name":"InitializationService"}],"entryComponents":[{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵbb"}],"bootstrap":[{"__symbolic":"reference","name":"ɵi"}]}]}],"members":{},"statics":{"withInterceptor":{"__symbolic":"function","parameters":[],"value":[{"ngModule":{"__symbolic":"reference","name":"DataMapperModule"},"providers":[{"__symbolic":"reference","name":"DocumentManagementService"},{"__symbolic":"reference","name":"MappingManagementService"},{"__symbolic":"reference","name":"ErrorHandlerService"},{"__symbolic":"reference","name":"InitializationService"},{"provide":{"__symbolic":"reference","module":"@angular/common/http","name":"HTTP_INTERCEPTORS","line":155,"character":19},"useClass":{"__symbolic":"reference","name":"ApiXsrfInterceptor"},"multi":true}]}]}}},"ApiXsrfInterceptor":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":12,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpXsrfTokenExtractor","line":16,"character":38}]}],"intercept":[{"__symbolic":"method"}]}},"ErrorHandlerService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":21,"character":1}}],"members":{"debug":[{"__symbolic":"method"}],"info":[{"__symbolic":"method"}],"warn":[{"__symbolic":"method"}],"error":[{"__symbolic":"method"}],"validationError":[{"__symbolic":"method"}],"mappingError":[{"__symbolic":"method"}],"removeError":[{"__symbolic":"method"}],"clearMappingErrors":[{"__symbolic":"method"}],"clearValidationErrors":[{"__symbolic":"method"}],"addError":[{"__symbolic":"method"}],"arrayDoesNotContainError":[{"__symbolic":"method"}],"addValidationError":[{"__symbolic":"method"}]}},"DocumentManagementService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":28,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":446,"character":28}]}],"initialize":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"fetchClassPath":[{"__symbolic":"method"}],"fetchDocument":[{"__symbolic":"method"}],"createDocumentFetchRequest":[{"__symbolic":"method"}],"parseDocumentResponse":[{"__symbolic":"method"}],"extractJSONDocumentDefinitionFromInspectionResponse":[{"__symbolic":"method"}],"extractJSONDocumentDefinition":[{"__symbolic":"method"}],"extractXMLDocumentDefinitionFromInspectionResponse":[{"__symbolic":"method"}],"extractXMLDocumentDefinition":[{"__symbolic":"method"}],"isSelectedRootElement":[{"__symbolic":"method"}],"extractJavaDocumentDefinitionFromInspectionResponse":[{"__symbolic":"method"}],"extractJavaDocumentDefinition":[{"__symbolic":"method"}],"parseJSONFieldFromDocument":[{"__symbolic":"method"}],"parseFieldFromDocument":[{"__symbolic":"method"}],"parseXMLFieldFromDocument":[{"__symbolic":"method"}],"parseJavaFieldFromDocument":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]},"statics":{"generateMockJSONDoc":{"__symbolic":"function","parameters":[],"value":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"DocumentManagementService"},"member":"generateMockJSONInstanceDoc"}}}}},"MappingManagementService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":34,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":59,"character":28}]}],"findMappingFiles":[{"__symbolic":"method"}],"fetchMappings":[{"__symbolic":"method"}],"saveCurrentMapping":[{"__symbolic":"method"}],"serializeMappingsToJSON":[{"__symbolic":"method"}],"saveMappingToService":[{"__symbolic":"method"}],"handleMappingSaveSuccess":[{"__symbolic":"method"}],"removeMapping":[{"__symbolic":"method"}],"removeMappedPair":[{"__symbolic":"method"}],"addMappedPair":[{"__symbolic":"method"}],"updateMappedField":[{"__symbolic":"method"}],"removeMappedFieldPairField":[{"__symbolic":"method"}],"resequenceMappedField":[{"__symbolic":"method"}],"addActiveMappingField":[{"__symbolic":"method"}],"removeActiveMappingField":[{"__symbolic":"method"}],"fieldSelected":[{"__symbolic":"method"}],"addNewMapping":[{"__symbolic":"method"}],"selectMapping":[{"__symbolic":"method"}],"deselectMapping":[{"__symbolic":"method"}],"enableMappingPreview":[{"__symbolic":"method"}],"disableMappingPreview":[{"__symbolic":"method"}],"validateMappings":[{"__symbolic":"method"}],"fetchFieldActions":[{"__symbolic":"method"}],"notifyMappingUpdated":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}]}},"InitializationService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":31,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"DocumentManagementService"},{"__symbolic":"reference","name":"MappingManagementService"},{"__symbolic":"reference","name":"ErrorHandlerService"}]}],"resetConfig":[{"__symbolic":"method"}],"initialize":[{"__symbolic":"method"}],"addJavaDocument":[{"__symbolic":"method"}],"addNonJavaDocument":[{"__symbolic":"method"}],"fetchDocuments":[{"__symbolic":"method"}],"fetchMappings":[{"__symbolic":"method"}],"fetchFieldActions":[{"__symbolic":"method"}],"updateStatus":[{"__symbolic":"method"}],"handleError":[{"__symbolic":"method"}],"updateLoadingStatus":[{"__symbolic":"method"}]}},"DocumentDefinition":{"__symbolic":"class","members":{"getComplexField":[{"__symbolic":"method"}],"getEnumField":[{"__symbolic":"method"}],"getAllFields":[{"__symbolic":"method"}],"fieldExists":[{"__symbolic":"method"}],"isFieldsExist":[{"__symbolic":"method"}],"getFields":[{"__symbolic":"method"}],"getName":[{"__symbolic":"method"}],"getNamespaceForAlias":[{"__symbolic":"method"}],"getField":[{"__symbolic":"method"}],"getTerminalFields":[{"__symbolic":"method"}],"clearSelectedFields":[{"__symbolic":"method"}],"getSelectedFields":[{"__symbolic":"method"}],"initializeFromFields":[{"__symbolic":"method"}],"updateField":[{"__symbolic":"method"}],"addField":[{"__symbolic":"method"}],"populateChildren":[{"__symbolic":"method"}],"removeField":[{"__symbolic":"method"}],"updateFromMappings":[{"__symbolic":"method"}],"populateFieldParentPaths":[{"__symbolic":"method"}],"populateFieldData":[{"__symbolic":"method"}],"prepareComplexFields":[{"__symbolic":"method"}],"discoverComplexFields":[{"__symbolic":"method"}],"printDocumentFields":[{"__symbolic":"method"}]},"statics":{"noneField":null,"padField":null}},"MappingDefinition":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"templateExists":[{"__symbolic":"method"}],"addTable":[{"__symbolic":"method"}],"getTableByName":[{"__symbolic":"method"}],"detectTableIdentifiers":[{"__symbolic":"method"}],"getTableBySourceTarget":[{"__symbolic":"method"}],"getTables":[{"__symbolic":"method"}],"removeTableByName":[{"__symbolic":"method"}],"getFirstMappingForLookupTable":[{"__symbolic":"method"}],"removeStaleMappings":[{"__symbolic":"method"}],"isMappingStale":[{"__symbolic":"method"}],"initializeMappingLookupTable":[{"__symbolic":"method"}],"updateMappingsFromDocuments":[{"__symbolic":"method"}],"updateDocumentNamespacesFromMappings":[{"__symbolic":"method"}],"getAllMappings":[{"__symbolic":"method"}],"findMappingsForField":[{"__symbolic":"method"}],"removeMapping":[{"__symbolic":"method"}],"removeFieldFromAllMappings":[{"__symbolic":"method"}],"updateMappedFieldsFromDocuments":[{"__symbolic":"method"}]}},"DocumentType":{"JAVA":"Java","XML":"XML","JSON":"JSON","CORE":"Core","CSV":"CSV","CONSTANT":"Constants","PROPERTY":"Property"},"InspectionType":{"JAVA_CLASS":"JAVA_CLASS","SCHEMA":"SCHEMA","INSTANCE":"INSTANCE"},"ConfigModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"addDocument":[{"__symbolic":"method"}],"addDocuments":[{"__symbolic":"method"}],"getDocsWithoutPropertyDoc":[{"__symbolic":"method"}],"getDocs":[{"__symbolic":"method"}],"hasJavaDocuments":[{"__symbolic":"method"}],"isClassPathResolutionNeeded":[{"__symbolic":"method"}],"getDocForIdentifier":[{"__symbolic":"method"}],"getFirstXmlDoc":[{"__symbolic":"method"}],"getAllDocs":[{"__symbolic":"method"}],"documentsAreLoaded":[{"__symbolic":"method"}],"isRequiredFieldValid":[{"__symbolic":"method"}]},"statics":{"mappingServicesPackagePrefix":"io.atlasmap.v2","javaServicesPackagePrefix":"io.atlasmap.java.v2","cfg":{"__symbolic":"new","expression":{"__symbolic":"reference","name":"ConfigModel"}},"getConfig":{"__symbolic":"function","parameters":[],"value":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ConfigModel"},"member":"cfg"}}}},"DocumentInitializationModel":{"__symbolic":"class","members":{}},"MappingModel":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor"}],"getFirstFieldMapping":[{"__symbolic":"method"}],"getLastFieldMapping":[{"__symbolic":"method"}],"getCurrentFieldMapping":[{"__symbolic":"method"}],"addValidationError":[{"__symbolic":"method"}],"clearValidationErrors":[{"__symbolic":"method"}],"getValidationErrors":[{"__symbolic":"method"}],"getValidationWarnings":[{"__symbolic":"method"}],"removeValidationError":[{"__symbolic":"method"}],"getPreviewErrors":[{"__symbolic":"method"}],"getPreviewWarnings":[{"__symbolic":"method"}],"removePreviewError":[{"__symbolic":"method"}],"getFirstCollectionField":[{"__symbolic":"method"}],"isCollectionMode":[{"__symbolic":"method"}],"isLookupMode":[{"__symbolic":"method"}],"removeMappedPair":[{"__symbolic":"method"}],"getMappedFields":[{"__symbolic":"method"}],"isFieldSelectable":[{"__symbolic":"method"}],"getMappedTarget":[{"__symbolic":"method"}],"getFieldSelectionExclusionReason":[{"__symbolic":"method"}],"isFieldMapped":[{"__symbolic":"method"}],"getAllMappedFields":[{"__symbolic":"method"}],"getAllFields":[{"__symbolic":"method"}],"getFields":[{"__symbolic":"method"}],"hasMappedFields":[{"__symbolic":"method"}],"hasFullyMappedPair":[{"__symbolic":"method"}]}},"MappingSerializer":{"__symbolic":"class","members":{}},"DataMapperAppComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":29,"character":1},"arguments":[{"selector":"data-mapper","moduleId":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"module"},"member":"id"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":32,"character":17},"member":"None"},"template":"<div class=\"DataMapperUI\">\n  <!-- <div class=\"DataMapperUIBackground\"></div> -->\n  <!-- <div class=\"DataMapperUIBackgroundCover\"></div> -->\n  <div [attr.class]=\"getConfig().initCfg.initialized ? 'dataMapperBody' : 'dataMapperBodyHidden'\">\n    <div class=\"row\">\n      <data-mapper-error #errorPanel [isValidation]=\"false\" [errorService]=\"getConfig().errorService\"></data-mapper-error>\n    </div>\n    <div class=\"row\" style=\"min-height:0px;\">\n      <modal-window #modalWindow [cfg]=\"getConfig()\"></modal-window>\n    </div>\n    <div class=\"row\">\n      <toolbar #toolbarComponent [cfg]=\"getConfig()\" [modalWindow]=\"modalWindow\"></toolbar>\n    </div>\n    <div class=\"row\" style=\"height:calc(100% - 32px); position:relative; padding-top:10px;\"\n      *ngIf=\"!getConfig().initCfg.initializationErrorOccurred && hasSourceDoc && hasTargetDoc\">\n      <div style='height:100%; padding:0;' [attr.class]=\"(getConfig().showMappingTable || getConfig().showNamespaceTable) ? 'col-md-9 hidden' : 'col-md-9'\">\n        <div style=\"float:left; width:40%; height:100%;\">\n          <document-definition #docDefInput [cfg]=\"getConfig()\" [modalWindow]=\"modalWindow\" [isSource]=\"true\"></document-definition>\n        </div>\n        <div style=\"float:left; width:20%; height:100%; margin-left:-5px; margin-right:-5px;\">\n          <line-machine #lineMachine [cfg]=\"getConfig()\" [docDefInput]=\"docDefInput\" [docDefOutput]=\"docDefOutput\"></line-machine>\n        </div>\n        <div style=\"float:left; width:40%; height:100%;\">\n          <document-definition #docDefOutput [cfg]=\"getConfig()\" [modalWindow]=\"modalWindow\" [isSource]=\"false\"></document-definition>\n        </div>\n        <div class=\"clear\"></div>\n      </div>\n      <div class=\"col-md-9\" style='height:100%; padding:0;' *ngIf=\"getConfig().showMappingTable\">\n        <mapping-list [cfg]=\"getConfig()\"></mapping-list>\n      </div>\n      <div class=\"col-md-9\" style='height:100%; padding:0;' *ngIf=\"getConfig().showNamespaceTable\">\n        <namespace-list [cfg]=\"getConfig()\" [modalWindow]=\"modalWindow\"></namespace-list>\n      </div>\n\n      <div class=\"col-md-3\" style=\"padding:0px; height:100%;\">\n        <mapping-detail #mappingDetailComponent [cfg]=\"getConfig()\" [modalWindow]=\"modalWindow\"></mapping-detail>\n      </div>\n    </div>\n  </div>\n  <div class=\"DataMapperLoadingMessage\" *ngIf=\"!getConfig().initCfg.initialized\">\n    <label [attr.class]=\"getConfig().initCfg.initializationErrorOccurred ? 'error' : ''\">{{ loadingStatus }}</label>\n    <span class=\"spinner spinner-xs spinner-inline\" *ngIf=\"!getConfig().initCfg.initializationErrorOccurred\"></span>\n  </div>\n</div>","styles":[".DataMapperUI{height:100%;width:100%;position:relative}.DataMapperUI .tooltip-inner{min-width:160px;max-width:600px;color:#fff;text-align:center}.DataMapperUI .clear{clear:both;height:0}.DataMapperUI .hidden{visibility:hidden}.DataMapperUI I{display:inline-block}.DataMapperUI I.link:hover,.DataMapperUI I.selected{color:#5cbadf;cursor:pointer}.DataMapperUI I.selectedIcon{color:#5cbadf}.DataMapperUI LABEL{font-weight:400}.DataMapperUI A:hover{color:#0088ce;cursor:pointer;text-decoration:none}.DataMapperUI input[disabled]{color:#afafaf}.DataMapperUI .form-group{margin:10px auto}.DataMapperUI .form-group LABEL{width:75px}.DataMapperUI .form-group LABEL.disabled{color:#afafaf}.DataMapperUI .form-group SELECT{width:100px}.DataMapperUI .modal-body{max-height:400px;overflow:auto;overflow-x:hidden;margin-bottom:5px}.DataMapperUI .row{margin:0}.DataMapperUI .card-pf{margin:0;padding-left:0;padding-right:0;height:100%;-webkit-animation-name:dm-fade-in;-webkit-animation-duration:.4s;animation-name:dm-fade-in;animation-duration:.4s}.DataMapperUI .dm-swipe-left{-webkit-animation-name:dm-swipe-left;-webkit-animation-duration:.4s;animation-name:dm-swipe-left;animation-duration:.4s}.DataMapperUI .dm-swipe-right{-webkit-animation-name:dm-swipe-right;-webkit-animation-duration:.4s;animation-name:dm-swipe-right;animation-duration:.4s}.DataMapperUI .card-pf-title{font-size:20px;padding:0 12px}.DataMapperUI .card-pf-heading{margin:0;padding:0}.DataMapperUI .card-pf-body{padding:0;margin:0}.DataMapperUI .alert{margin-bottom:5px}.DataMapperUI .alert .close{font-size:18px;color:#888}@-webkit-keyframes dm-fade-in{from{opacity:0}to{opacity:1}}@keyframes dm-fade-in{from{opacity:0}to{opacity:1}}@-webkit-keyframes dm-fade-out{from{opacity:1}to{opacity:0}}@keyframes dm-fade-out{from{opacity:1}to{opacity:0}}@-webkit-keyframes dm-swipe-right{from{margin-left:-100%}to{margin-left:0}}@keyframes dm-swipe-right{from{margin-left:-100%}to{margin-left:0}}@-webkit-keyframes dm-swipe-left{from{margin-left:0}to{margin-left:-100%}}@keyframes dm-swipe-left{from{margin-left:0}to{margin-left:-100%}}.DataMapperUIBackgroundCover{height:100%;width:100%;position:absolute;top:0;left:0;background-repeat:repeat;opacity:.15}.DataMapperUIBackground{height:100%;width:100%;position:absolute;top:0;left:0;background-color:#4e5258}.DataMapperUIBackground,.DataMapperUIBackgroundCover{display:none;background-image:none}.dataMapperBodyHidden{visibility:hidden;position:relative;height:0}.dataMapperBody{visibility:visible;height:100%;position:relative}.DataMapperLoadingMessage{position:absolute;height:100%;top:0;left:0;padding-top:20%;width:100%;text-align:center}.DataMapperLoadingMessage .error{color:#dc143c}.DataMapperLoadingMessage .spinner{vertical-align:text-bottom}.DataMapperLoadingMessage LABEL{vertical-align:text-top;margin-right:3px}.DataMapperLoadingMessage IMG{height:12px;width:12px;vertical-align:middle}.DataMapperUI .toolbar{margin:1px 0;padding:10px}.DataMapperUI .toolbar .toolbar-icons I{font-size:20px;margin-left:10px;vertical-align:middle}.DataMapperUI .toolbar .dropdown-menu{margin-top:5px}.DataMapperUI .toolbar .dropdown-menu LI{background-color:transparent;width:200px}.DataMapperUI .toolbar .dropdown-menu LI A{color:#363636}.DataMapperUI .toolbar .dropdown-menu LI I{color:#363636;font-size:10px;margin-right:10px;vertical-align:baseline}.DataMapperUI .toolbar .dropdown-menu LI I.fa-check{margin-top:3px}.DataMapperUI .toolbar .dropdown-menu LI:hover{background-color:rgba(92,186,223,.75)}.DataMapperUI .docDef{position:relative;border:1px solid #cac9c9;height:100%;background-color:#fff;overflow:hidden}.DataMapperUI .docDef .docName{overflow:hidden;display:inline-block;width:calc(100% - 45px);margin-left:3px;float:left}.DataMapperUI .docDef .docName I{margin-right:5px;vertical-align:baseline;margin-bottom:4px}.DataMapperUI .docDef I.searchBoxIcon{float:right}.DataMapperUI .searchBox{position:relative}.DataMapperUI .searchBox INPUT{width:100%;border:1px solid #fbfbfb;border-bottom:1px solid #cac9c9;padding:5px 10px;float:left}.DataMapperUI .searchBox INPUT:placeholder-shown{font-style:italic}.DataMapperUI .searchBoxCloseIcon{position:absolute;right:10px;top:10px}.DataMapperUI .docDef .fieldList{height:calc(100% - 90px)}.DataMapperUI .docDef .fieldListSearchOpen{height:calc(100% - 122px)}.DataMapperUI .docDef .fieldsCount{padding:5px 12px 5px 5px;font-size:10px;font-weight:700;text-align:right;margin:0;width:100%;border-top:1px solid #cac9c9;border-bottom:0 solid #000}.DataMapperUI .docDef .documentHeader{color:#fff;background-image:linear-gradient(to bottom,#7d7d7d,#363636);font-size:16px;padding-top:5px;margin:0;overflow:hidden}.DataMapperUI .docDef .documentHeader I.link:hover{color:#363636}.DataMapperUI I.docCollapseIcon{width:10px;margin-left:5px}.DataMapperUI .noSearchResults{width:100%;padding:10px;text-align:center}.DataMapperUI .DocumentFieldDetailComponent{width:100%;margin:0}.DataMapperUI .DocumentFieldDetailComponent .fieldDetail{padding:5px;border-bottom:1px solid #d1d1d1}.DataMapperUI .DocumentFieldDetailComponent LABEL{padding:0;margin:0 0 1px;vertical-align:middle}.DataMapperUI .DocumentFieldDetailComponent .selectedField{background-color:#02a2d8;color:#fff}.DataMapperUI .DocumentFieldDetailComponent .selectedField I{color:#fff}.DataMapperUI .DocumentFieldDetailComponent .dragHover{background-color:#02a2d8;color:#fff}.DataMapperUI .DocumentFieldDetailComponent .dragHover I{color:#fff}.DataMapperUI .docDef .DocumentFieldDetailComponent I{text-shadow:0 1px 2px rgba(3,3,3,.24);margin-right:2px;font-size:10px}.DataMapperUI .DocumentFieldDetailComponent I.partOfMappingIcon{color:#0088ce}.DataMapperUI .DocumentFieldDetailComponent I.arrow{text-shadow:none;width:8px;font-size:14px;margin-bottom:2px;margin-right:3px}.DataMapperUI .DocumentFieldDetailComponent I.parentFolder{color:#363636;text-shadow:none;margin-right:2px;font-size:12px}.DataMapperUI .DocumentFieldDetailComponent .selectedField I.partOfMappingIcon{color:#fff}.DataMapperUI .DocumentFieldDetailComponent I.partOfMappingIconHidden{visibility:hidden}.DataMapperUI .DocumentFieldDetailComponent .disableSelection LABEL{text-decoration:line-through;color:#dcdcdc}.DataMapperUI .DocumentFieldDetailComponent .propertyFieldIcons I{font-size:12px;vertical-align:middle;text-shadow:none}.DataMapperEditComponent .form-group SELECT,.DataMapperEditComponent INPUT{width:300px}.DataMapperEditComponent .form-group TEXTAREA{margin:auto}.dataMapperItemList{border:1px solid #cac9c9;margin-right:10px;height:100%}.dataMapperItemList LABEL{float:left;margin-bottom:0;padding-left:5px}.dataMapperItemList .items{height:calc(100% - 125px);position:relative;overflow:scroll;overflow-x:hidden;float:left;clear:left;width:100%}.dataMapperItemList .items.searchShown{height:calc(100% - 157px)}.dataMapperItemList .item{border-bottom:1px solid #d1d1d1}.dataMapperItemList .item.even{background-color:rgba(201,201,201,.1)}.dataMapperItemList .item.active{background-color:#39a5dc;color:#fff}.dataMapperItemList .item.active .fieldPath I{color:#fff;text-shadow:0 1px 2px rgba(54,54,54,.24)}.dataMapperItemList .itemCount{padding:5px 12px 5px 5px;font-size:10px;font-weight:700;text-align:right;margin:0;width:100%;border-top:1px solid #cac9c9;border-bottom:0 solid #000;float:left;clear:left}.dataMapperItemList .card-pf-title .name{overflow:hidden;display:inline-block;width:calc(100% - 45px);margin-left:3px;float:left}.dataMapperItemList .card-pf-title .name I{margin-right:5px;vertical-align:baseline}.dataMapperItemList .card-pf-title .name LABEL{float:none;padding-left:0}.dataMapperItemList .card-pf-title{border-bottom:1px solid #cac9c9;margin:0;padding-top:20px;padding-bottom:20px}.dataMapperItemList I.searchBoxIcon{float:right}.dataMapperItemList .rows{border-top:1px solid #d1d1d1}.dataMapperItemList .searchHeaderWrapper{width:100%;float:left;clear:left;position:relative}.dataMapperItemList .rowTitles{background-color:#fff;width:calc(100% - 0px);overflow:scroll;overflow-x:hidden;padding:2px 6px}.dataMapperItemList .rowTitles LABEL{width:calc(40% - 20px);padding:5px;float:left;margin-bottom:0}.dataMapperItemList .rowTitles LABEL I{margin-right:5px;vertical-align:baseline;text-shadow:0 1px 2px rgba(3,3,3,.24)}.dataMapperItemList .itemRow{padding:5px 6px}.dataMapperItemList .noSearchResults{font-weight:bolder;font-size:14px;text-align:center;padding:30px}.dataMapperItemList .noSearchResults LABEL{float:none}.mappingList .fieldNames{float:left;width:calc(40% - 20px)}.mappingList .fieldPath{clear:left}.mappingList .fieldPath I{margin-left:5px;font-size:12px;color:#0088ce;text-shadow:0 1px 2px rgba(3,3,3,.24)}.mappingList .transition{float:left;width:calc(15% - 20px)}.mappingList .error{float:right;font-size:14px}.mappingList .rowTitles LABEL.type{width:calc(15% - 20px)}.DataMapperUI .namespaceList LABEL.alias{width:calc(15% - 0px)}.DataMapperUI .namespaceList LABEL.locationUri,.DataMapperUI .namespaceList LABEL.uri{width:calc(30% - 0px)}.fieldMappingDetail{border-left:1px solid #d1d1d1;height:100%;background-color:#d1d1d1;border:1px solid #cac9c9}.fieldDetailTooltip LABEL{color:#fff;float:left;clear:left}.fieldDetailTooltip LABEL.parentObjectName{color:#fff;font-style:italic}.fieldDetailTooltip LABEL.parentObjectName I{vertical-align:baseline}.fieldMappingDetail .fieldDetail INPUT{padding:2px;width:calc(100% - 5px);color:#4d5258;box-shadow:inset 0 2px 2px 0 rgba(0,0,0,.08);border:1px solid #bbb}.fieldMappingDetail .fieldDetail .dropdown{width:calc(100% - 71px)}.fieldMappingDetail .fieldDetail .dropdown-menu{padding:0;width:100%}.fieldMappingDetail .fieldDetail .dropdown-menu LI A{margin:0}.fieldMappingDetail .fieldDetail .dropdown-menu button.dropdown-item{background-color:#fff;display:block;border:0 solid #000;width:100%;text-align:left}.fieldMappingDetail .fieldDetail .dropdown-menu button.active{background-color:#f5f5f5}.fieldDetail .parentObjectName{font-style:italic}.fieldDetail .parentObjectName I{font-size:12px;vertical-align:text-bottom;margin-right:2px}.fieldMappingDetail I{vertical-align:middle}.fieldMappingDetail A.button I{margin-right:5px;font-size:10px}.fieldMappingDetail A.button{margin:10px 10px 10px 0;border:1px solid #02a2d7;padding:5px 10px;border-radius:5px}.fieldMappingDetail A.button:hover{border:1px solid #363636}.fieldMappingDetail HR{margin-top:2px;margin-bottom:2px;border-top:1px solid #d1d1d1}.fieldMappingDetail .sectionHeader{font-weight:700}.fieldMappingDetail .fieldMappingDetail-body{height:calc(100% - 65px);overflow:auto}.fieldMappingDetail A.small-primary{padding:5px;border-radius:1px;border:1px solid #00659c;background-image:linear-gradient(to bottom,#39a5dc,#0088ce);box-shadow:0 2px 3px 0 rgba(3,3,3,.1);text-align:center;color:#fff}.fieldMappingDetail A.small-primary:active{background-image:linear-gradient(to bottom,#0088ce,#39a5dc)}.fieldMappingDetail .collectionSectionContainer{width:100%;overflow:hidden;overflow-y:auto;height:100%}.fieldMappingDetail .collectionSection{width:200%}.fieldMappingDetail .collectionSectionLeft{margin-left:-100%}.fieldMappingDetail .alert>.pficon{top:8px;font-size:16px;left:8px}.fieldMappingDetail .alert{margin:0;border-left-width:0;border-right-width:0;padding:5px}.fieldMappingDetail .alert LABEL{width:calc(100% - 60px);margin-left:28px;margin-bottom:0}.fieldMappingDetail .alert .close{margin-right:5px}.DataMapperUI .alert{font-size:12px}.DataMapperUI .alert-info{color:green}.mappingFieldAction .form-group LABEL{float:left;clear:left;width:30%}.mappingFieldAction .form-group SELECT{float:left;clear:left;width:calc(100% - 3px)}.mappingFieldAction .form-group INPUT{float:left;width:69%;text-align:right}.fieldMappingDetail .mappingFieldAction .linkContainer{padding-right:6px;padding-top:15px}.DataMapperUI .CollapsableCardHeader{border-top:1px solid #d1d1d1}.DataMapperUI .CollapsableCardHeader .card-pf-heading{border-bottom:0;padding-left:5px}.DataMapperUI .sources .CollapsableCardHeader .card-pf-heading{border-top:0}.DataMapperUI .CollapsableCardHeader .card-pf-title{font-size:16px}.DataMapperUI .CollapsableCardHeader I{margin-right:0;vertical-align:middle;width:24px;font-size:20px}.mappingFieldContainer{background-color:#d3d3d3;padding:14px 14px 6px}.fieldMappingDetail .linkContainer{position:relative;width:100%;text-align:right}.MappingFieldSection{background-color:#fff;padding:10px;margin:0 0 10px;box-shadow:0 0 1px 1px rgba(51,51,51,.25)}.MappingFieldSection LABEL{color:#363636}.MappingFieldSection .fieldDetailTooltip LABEL{color:#fff}.DataMapperUI .TransitionSelection LABEL{width:100%}.DataMapperUI .TransitionSelection .enumSection LABEL{width:calc(100% - 25px);margin-bottom:0}.DataMapperUI .TransitionSelection SELECT{display:block;width:100%}.DataMapperUI .modal{width:100%;height:100%;overflow:auto}.DataMapperUI .modal-footer .btn{margin-left:10px}.DataMapperUI .modal-footer{margin:0}.DataMapperUI .modal-message{padding:10px 20px}.MappingSelectionComponent{margin-left:20px;margin-right:20px;width:500px}.MappingSelectionComponent .MappingSelectionOptions{overflow:auto;max-height:300px}.MappingSelectionComponent .inputFields,.MappingSelectionComponent .outputFields{width:200px;padding:5px 5px 5px 10px;vertical-align:top}.MappingSelectionSection{padding:0 8px;border:1px solid #f6f6f6}.MappingSelectionSection .fieldName,.MappingSelectionSection .numberWrapper,.MappingSelectionSection .pathContainer,.MappingSelectionSection .pathName{display:inline;padding:0;margin:0;float:left}.MappingSelectionSection .numberWrapper{width:30px;height:30px;text-align:center;color:#fafafa;background-color:#0088ce;border-radius:15px;font-size:16px;margin-right:10px;margin-left:5px;margin-top:15px}.MappingSelectionSection .number{display:block;font-weight:700;margin-top:2px}.SelectedMappingSelectionSection .numberWrapper{background-color:#fff;color:#0088ce}.MappingSelectionSection .pathName{word-break:break-word}.MappingSelectionSection .pathContainer{display:inline-block;width:calc(100% - 45px)}.MappingSelectionComponent .odd{background-color:#f6f6f6}.MappingSelectionComponent .SelectedMappingSelectionSection.odd,.SelectedMappingSelectionSection{background-color:#0088ce;color:#fafafa;border-color:#0088ce}.MappingSelectionSection .sourceTargetSection LABEL{display:none}.MappingSelectionSection .sourceTargetSection I{font-size:16px;margin-right:5px;vertical-align:text-bottom}.MappingSelectionSection .sourceTargetSection I:hover{color:inherit},.MappingSelectionComponent .pathHeader,.MappingSelectionComponent .pathHeader .fieldName,.MappingSelectionComponent .pathHeader .pathName{display:inline;padding:0;margin:0;float:left}.MappingSelectionComponent .pathHeader .pathName{word-break:break-word}.MappingSelectionComponent .pathHeader{display:inline-block;width:100%;margin-top:2px;margin-bottom:20px}.MappingSelectionComponent .sourceTargetHeader{font-size:16px}.MappingSelectionComponent .fieldPair{margin-bottom:10px;border-left:1px solid #363636;padding-left:5px;margin-top:10px}.SelectedMappingSelectionSection .fieldPair{border-left-color:#fafafa}.MappingSelectionComponent BUTTON.addButton I{margin-right:5px}.MappingSelectionComponent .header{margin-bottom:20px}.DataMapperUI .LookupTableComponent .lookupTableRow{margin:0 10px 10px 5px;padding:5px 0}.DataMapperUI .LookupTableComponent LABEL{width:150px;margin-right:20px;overflow:hidden;vertical-align:bottom}.DataMapperUI .LookupTableComponent SELECT{width:200px;vertical-align:super}.DataMapperUI .previewSourceTextarea{width:100%;height:29px}.DataMapperUI .previewResultContainer{position:relative;width:100%;height:29px}.DataMapperUI .previewResultContainer:before{box-sizing:border-box;content:'';top:0;left:0;position:absolute;border-top:14px solid transparent;border-bottom:14px solid transparent;border-left:14px solid #003b5d}.DataMapperUI .previewResultContainer:after{box-sizing:border-box}.DataMapperUI .previewResultContainer textarea{min-height:29px;height:100%;width:100%;resize:none;padding:4px 4px 4px 22px;line-height:1.75;border:none;font-size:12px;color:#000}"]}]}],"members":{"lineMachine":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":82,"character":3},"arguments":["lineMachine"]}]}],"errorPanel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":83,"character":3},"arguments":["errorPanel"]}]}],"modalWindow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":84,"character":3},"arguments":["modalWindow"]}]}],"docDefInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":85,"character":3},"arguments":["docDefInput"]}]}],"docDefOutput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":86,"character":3},"arguments":["docDefOutput"]}]}],"mappingDetailComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":87,"character":3},"arguments":["mappingDetailComponent"]}]}],"toolbarComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":88,"character":3},"arguments":["toolbarComponent"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":97,"character":31}]}],"getConfig":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"updateFromConfig":[{"__symbolic":"method"}]}},"ɵa":{"production":false,"xsrf":{"headerName":"ATLASMAP-XSRF-TOKEN","cookieName":"ATLASMAP-XSRF-COOKIE","defaultTokenValue":"awesome"}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":31,"character":1},"arguments":[{"selector":"document-definition","template":"<div #documentDefinitionElement class='docDef' *ngIf=\"cfg && cfg.initCfg.initialized\">\n  <div class=\"card-pf\">\n    <div class=\"card-pf-heading\">\n      <h2 class=\"card-pf-title\">\n        <div class=\"docName\">\n          <i class=\"fa {{ isSource ? 'fa-hdd-o' : 'fa-download' }}\"></i>\n          <label>{{ sourcesTargetsLabel }}</label>\n        </div>\n        <i (click)=\"toggleSearch()\" [attr.class]=\"getSearchIconCSSClass()\" tooltip=\"Toggle search window\" placement=\"left\"></i>\n        <div class=\"clear\"></div>\n      </h2>\n\n    </div>\n    <div *ngIf=\"searchMode\" class=\"searchBox\">\n      <input type=\"text\" #searchFilterBox id=\"search-filter-box\" (keyup)=\"search(searchFilterBox.value)\" placeholder=\"Search\" [(ngModel)]=\"searchFilter\"\n        [focus]=\"true\" />\n      <i class=\"fa fa-close searchBoxCloseIcon link\" (click)=\"toggleSearch()\" tooltip=\"Close search window\" placement=\"left\"></i>\n      <div class=\"clear\"></div>\n    </div>\n    <div [attr.class]=\"searchMode ? 'fieldListSearchOpen' : 'fieldList'\" style=\"overflow:auto;\" (scroll)=\"handleScroll($event)\">\n      <div class=\"panel-group\" id=\"accordion-markup\">\n        <div *ngFor=\"let docDef of documents\" #docDetail class=\"panel panel-default\" [attr.id]='docDef.name'>\n          <div class=\"panel-heading\" tooltip=\"{{ docDef.description }}\" placement=\"bottom\" *ngIf=\"isDocNameVisible(docDef)\" (click)=\"toggleFieldVisibility(docDef)\">\n            <h4 class=\"panel-title\">\n              <div style=\"float:left\">\n                <i class=\"fa fa-angle-right docCollapseIcon\" *ngIf=\"!docDef.showFields\"></i>\n                <i class=\"fa fa-angle-down docCollapseIcon\" *ngIf=\"docDef.showFields\"></i>\n                <i class=\"fa {{ isSource ? 'fa-hdd-o' : 'fa-download' }}\"></i>\n                <div style=\"display:inline-block; width:5px\">&nbsp;</div>\n                <label>{{ docDef.getName(cfg.showTypes) }}</label>\n              </div>\n            </h4>\n            <div style=\"float:right;\" *ngIf=\"isAddFieldAvailable(docDef)\">\n              <i class=\"fa fa-plus link\" (click)=\"addField(docDef, $event)\"></i>\n            </div>\n            <div class=\"clear\"></div>\n          </div>\n          <div class=\"panel-collapse collapse in\" *ngIf=\"docDef.showFields\">\n            <document-field-detail #fieldDetail *ngFor=\"let f of docDef.fields\" [modalWindow]=\"modalWindow\" [field]=\"f\" [cfg]=\"cfg\" [lineMachine]=\"lineMachine\"></document-field-detail>\n            <div class=\"panel-body\" *ngIf=\"!searchMode && docDef.isPropertyOrConstant && (!docDef.fields || !docDef.fields.length)\">\n              <label style=\"width:100%; padding:5px 16px; margin:0\">\n                No {{ docDef.type == 'Property' ? 'properties' : 'constants' }} exist.\n              </label>\n            </div>\n          </div>\n        </div>\n        <div class=\"panel panel-default\" *ngIf=\"searchMode && !searchResultsExist\">\n          <label>No search results.</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-pf-heading fieldsCount\">{{ getFieldCount() }} fields</div>\n  </div>\n</div>"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":90,"character":3}}]}],"isSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":91,"character":3}}]}],"modalWindow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":92,"character":3}}]}],"documentDefinitionElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":94,"character":3},"arguments":["documentDefinitionElement"]}]}],"fieldComponents":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":95,"character":3},"arguments":["fieldDetail"]}]}],"docElements":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":96,"character":3},"arguments":["docDetail"]}]}],"ngOnInit":[{"__symbolic":"method"}],"getLineMachine":[{"__symbolic":"method"}],"setLineMachine":[{"__symbolic":"method"}],"getDocDefElementPosition":[{"__symbolic":"method"}],"getFieldDetailComponent":[{"__symbolic":"method"}],"getElementPosition":[{"__symbolic":"method"}],"getElementPositionForElement":[{"__symbolic":"method"}],"getFieldDetailComponentPosition":[{"__symbolic":"method"}],"getSearchIconCSSClass":[{"__symbolic":"method"}],"getFieldCount":[{"__symbolic":"method"}],"handleScroll":[{"__symbolic":"method"}],"toggleSearch":[{"__symbolic":"method"}],"addField":[{"__symbolic":"method"}],"isDocNameVisible":[{"__symbolic":"method"}],"toggleFieldVisibility":[{"__symbolic":"method"}],"isAddFieldAvailable":[{"__symbolic":"method"}],"search":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":26,"character":1},"arguments":[{"selector":"mapping-detail","template":"<div class='fieldMappingDetail' *ngIf=\"cfg.mappings.activeMapping && cfg.showMappingDetailTray\">\n  <div class=\"card-pf\">\n    <div class=\"card-pf-heading\">\n      <h2 class=\"card-pf-title clearfix\">\n        <div class=\"pull-left\">{{ getTitle() }}</div>\n        <i class=\"fa fa-trash link pull-right\" aria-hidden=\"true\" (click)=\"removeMapping($event)\" tooltip=\"Remove the current mapping\" placement=\"left\"></i>\n      </h2>\n    </div>\n    <div class=\"fieldMappingDetail-body\">\n      <div class=\"alert alert-danger\" *ngFor=\"let error of cfg.mappings.activeMapping.getValidationErrors()\">\n        <a class=\"close\" (click)=\"cfg.mappings.activeMapping.removeValidationError(error.identifier)\">\n          <i class=\"fa fa-close\"></i>\n        </a>\n        <span class=\"pficon pficon-error-circle-o\"></span>\n        <label>{{ error.message }}</label>\n      </div>\n      <div class=\"alert alert-warning\" *ngFor=\"let warn of cfg.mappings.activeMapping.getValidationWarnings()\">\n        <a class=\"close\" (click)=\"cfg.mappings.activeMapping.removeValidationError(warn.identifier)\">\n          <i class=\"fa fa-close\"></i>\n        </a>\n        <span class=\"pficon pficon-warning-triangle-o\"></span>\n        <label>{{ warn.message }}</label>\n      </div>\n\n      <!-- TODO reflect UXD outcome -->\n      <div class=\"alert alert-danger\" *ngFor=\"let error of cfg.mappings.activeMapping.getPreviewErrors()\">\n        <a class=\"close\" (click)=\"cfg.mappings.activeMapping.removePreviewError(error.identifier)\">\n          <i class=\"fa fa-close\"></i>\n        </a>\n        <span class=\"pficon pficon-error-circle-o\"></span>\n        <label>{{ error.message }}</label>\n      </div>\n      <div class=\"alert alert-warning\" *ngFor=\"let warn of cfg.mappings.activeMapping.getPreviewWarnings()\">\n        <a class=\"close\" (click)=\"cfg.mappings.activeMapping.removePreviewError(warn.identifier)\">\n          <i class=\"fa fa-close\"></i>\n        </a>\n        <span class=\"pficon pficon-warning-triangle-o\"></span>\n        <label>{{ warn.message }}</label>\n      </div>\n\n      <div *ngIf=\"!isMappingCollection()\">\n        <mapping-pair-detail *ngFor=\"let fieldPair of cfg.mappings.activeMapping.fieldMappings\" [cfg]=\"cfg\" [fieldPair]=\"fieldPair\"\n          [modalWindow]=\"modalWindow\"></mapping-pair-detail>\n      </div>\n      <collection-mapping [cfg]=\"cfg\" *ngIf=\"isMappingCollection()\"></collection-mapping>\n    </div>\n  </div>\n</div>"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":79,"character":3}}]}],"modalWindow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":80,"character":3}}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isMappingCollection":[{"__symbolic":"method"}],"getTitle":[{"__symbolic":"method"}],"removeMapping":[{"__symbolic":"method"}],"selectMapping":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"simple-mapping","template":"<div class=\"mappingFieldContainer\" *ngIf=\"fieldPair\">\n  <div *ngFor=\"let mappedField of fieldPair.getMappedFields(isSource)\" class=\"MappingFieldSection\" on-mouseover='handleMouseOver($event)'\n    [attr.draggable]=\"true\" (dragstart)=\"startDrag($event, mappedField)\" (drop)=\"endDrag($event, mappedField)\"\n    (dragenter)=\"dragEnterLeave($event, true)\" (dragleave)=\"dragEnterLeave($event, false)\" (dragover)=\"allowDrop($event)\">\n\n    <mapping-field-detail [fieldPair]=\"fieldPair\" [cfg]=\"cfg\" [isSource]=\"isSource\" [mappedField]=\"mappedField\"></mapping-field-detail>\n    <mapping-field-action [fieldPair]=\"fieldPair\" [cfg]=\"cfg\" [isSource]=\"isSource\" [mappedField]=\"mappedField\"></mapping-field-action>\n  </div>\n\n  <!-- 'Add Source/ Add Target' button -->\n  <div class=\"linkContainer\" *ngIf=\"isAddButtonVisible()\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"addClicked()\">{{ getAddButtonLabel() }}</button>\n  </div>\n</div>"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":3}}]}],"isSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":3}}]}],"fieldPair":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":3}}]}],"isPartialComponent":[{"__symbolic":"method"}],"handleMouseOver":[{"__symbolic":"method"}],"startDrag":[{"__symbolic":"method"}],"dragEnterLeave":[{"__symbolic":"method"}],"allowDrop":[{"__symbolic":"method"}],"endDrag":[{"__symbolic":"method"}],"isAddButtonVisible":[{"__symbolic":"method"}],"getTopFieldTypeLabel":[{"__symbolic":"method"}],"getAddButtonLabel":[{"__symbolic":"method"}],"addClicked":[{"__symbolic":"method"}],"removePair":[{"__symbolic":"method"}],"removeMappedField":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"collection-mapping","template":"<div class=\"collectionSectionContainer\">\n  <div [attr.class]=\"'collectionSection clearfix ' + getAnimationCSSClass()\">\n    <!-- collection field pairing detail -->\n    <div style=\"width:50%; padding-top:10px;\" class=\"pull-left mappingFieldContainer\">\n      <div *ngFor=\"let fieldPair of cfg.mappings.activeMapping.fieldMappings\">\n        <div class=\"MappingFieldSection\">\n          <!-- header label / trash icon -->\n          <div class=\"clearfix\">\n            <div class=\"pull-left\">\n              <label>Source</label>\n              <i class=\"fa fa-bolt\" style=\"font-size:12px; vertical-align:baseline;\" *ngIf=\"fieldPair.hasTransition()\"></i>\n            </div>\n            <div class=\"pull-right text-right\" style=\"margin-right:5px; font-size:15px\">\n              <i class=\"fa fa-edit link\" aria-hidden=\"true\" style=\"margin-right:5px\" (click)=\"editPair(fieldPair)\" tooltip=\"Edit mapping\" placement=\"left\"></i>\n              <i class=\"fa fa-trash link\" aria-hidden=\"true\" (click)=\"removePair(fieldPair)\" tooltip=\"Remove mapping\" placement=\"left\"></i>\n            </div>\n          </div>\n          <mapping-field-detail *ngFor=\"let mappedField of fieldPair.getMappedFields(true)\" [mappedField]=\"mappedField\" [fieldPair]=\"fieldPair\"\n            [cfg]=\"cfg\" [isSource]=\"true\"></mapping-field-detail>\n          <div class=\"pull-left\" style=\"margin-top:15px\">\n            <label>Target</label>\n          </div>\n          <div class=\"clear\"></div>\n          <div *ngFor=\"let mappedField of fieldPair.getMappedFields(false)\" class=\"MappingFieldSection\">\n            <mapping-field-detail [fieldPair]=\"fieldPair\" [cfg]=\"cfg\" [isSource]=\"false\" [mappedField]=\"mappedField\"></mapping-field-detail>\n            <mapping-field-action [fieldPair]=\"fieldPair\" [cfg]=\"cfg\" [isSource]=\"false\" [mappedField]=\"mappedField\"></mapping-field-action>\n          </div>\n        </div>\n      </div>\n      <!-- add button -->\n      <div class=\"linkContainer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"addClicked()\">Add Mapping</button>\n      </div>\n    </div>\n    <div class=\"pull-left\" style=\"width:50%; margin:0; padding:0\" *ngIf=\"fieldPairForEditing\">\n      <div class=\"card-pf-title clearfix\">\n        <div class=\"pull-left\">Edit Details</div>\n        <div class=\"pull-right\">\n          <i class=\"fa fa-close link\" aria-hidden=\"true\" (click)=\"exitEditMode()\"></i>\n        </div>\n      </div>\n      <mapping-pair-detail [cfg]=\"cfg\" [fieldPair]=\"fieldPairForEditing\" [modalWindow]=\"modalWindow\"></mapping-pair-detail>\n    </div>\n  </div>\n</div>"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":3}}]}],"getAnimationCSSClass":[{"__symbolic":"method"}],"getFields":[{"__symbolic":"method"}],"addClicked":[{"__symbolic":"method"}],"editPair":[{"__symbolic":"method"}],"exitEditMode":[{"__symbolic":"method"}],"removePair":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"mapping-pair-detail","template":"<div>\n  <collapsable-header title=\"Sources\" #sourcesHeader class=\"sources\"></collapsable-header>\n  <simple-mapping [cfg]=\"cfg\" [isSource]=\"true\" *ngIf=\"!sourcesHeader.collapsed\" [fieldPair]=\"fieldPair\"></simple-mapping>\n  <collapsable-header title=\"Action\" #actionsHeader></collapsable-header>\n  <transition-selection [cfg]=\"cfg\" [modalWindow]=\"modalWindow\" [fieldPair]=\"fieldPair\" *ngIf=\"!actionsHeader.collapsed\"></transition-selection>\n  <collapsable-header title=\"Targets\" #targetsHeader></collapsable-header>\n  <simple-mapping [cfg]=\"cfg\" [isSource]=\"false\" *ngIf=\"!targetsHeader.collapsed\" [fieldPair]=\"fieldPair\"></simple-mapping>\n</div>"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":37,"character":3}}]}],"fieldPair":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"modalWindow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":3}}]}],"sourcesHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":41,"character":3},"arguments":["sourcesHeader"]}]}],"actionsHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":43,"character":3},"arguments":["actionsHeader"]}]}],"targetsHeader":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":45,"character":3},"arguments":["targetsHeader"]}]}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":29,"character":1},"arguments":[{"selector":"empty-modal-body","template":""}]}],"members":{}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":36,"character":1},"arguments":[{"selector":"modal-window","template":"<ng-container *ngIf=\"visible\">\n  <div class=\"modal-backdrop fade\" [ngClass]=\"{'in': fade}\"></div>\n  <div id=\"modalWindow\" class=\"modal fade\" [ngClass]=\"{'in': fade, 'show': visible}\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <a (click)=\"closeClicked($event)\">\n            <span class='close'>\n              <span class=\"pficon pficon-close\"></span>\n            </span>\n          </a>\n          <h4 class=\"modal-title\">{{ headerText }}</h4>\n        </div>\n        <div class=\"modal-error\">\n          <data-mapper-error [isValidation]=\"true\" [errorService]=\"cfg.errorService\"></data-mapper-error>\n        </div>\n        <div class=\"modal-body\">\n          <div class=\"modal-message\" *ngIf=\"message\">{{ message }}</div>\n          <ng-template #dyn_target></ng-template>\n        </div>\n        <div class=\"modal-footer\">\n          <div class=\"modal-buttons\">\n            <button class=\"pull-right btn btn-primary\" [disabled]=\"confirmButtonDisabled\" \n              (click)=\"buttonClicked(true)\">{{ confirmButtonText }} </button>\n            <button class=\"pull-right btn btn-default\" (click)=\"buttonClicked(false)\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>"}]}],"members":{"headerText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":72,"character":3}}]}],"nestedComponentType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":3}}]}],"nestedComponentInitializedCallback":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":74,"character":3}}]}],"okButtonHandler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":75,"character":3}}]}],"cancelButtonHandler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":76,"character":3}}]}],"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":77,"character":3}}]}],"myTarget":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":86,"character":3},"arguments":["dyn_target",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":86,"character":38}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":91,"character":48},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":91,"character":91}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"loadComponent":[{"__symbolic":"method"}],"closeClicked":[{"__symbolic":"method"}],"close":[{"__symbolic":"method"}],"show":[{"__symbolic":"method"}],"reset":[{"__symbolic":"method"}],"buttonClicked":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"data-mapper-example-host","template":"<data-mapper #dataMapperComponent></data-mapper>","providers":[{"__symbolic":"reference","name":"MappingManagementService"},{"__symbolic":"reference","name":"ErrorHandlerService"},{"__symbolic":"reference","name":"DocumentManagementService"}]}]}],"members":{"dataMapperComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":36,"character":3},"arguments":["dataMapperComponent"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"InitializationService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"mapping-field-action","template":"<div class=\"mappingFieldAction\">\n  <div class=\"actionContainer\" *ngFor=\"let action of getMappedFieldActions(); let actionIndex = index\">\n\n    <div class=\"form-group\">\n      <div style=\"float:right; margin-right:5px;\" *ngIf=\"!action.isSeparateOrCombineMode\">\n        <i class=\"fa fa-trash link\" aria-hidden=\"true\" (click)=\"removeAction(action)\" tooltip=\"Remove transformation\" placement=\"left\"></i>\n      </div>\n      <div class=\"clear\"></div>\n\n      <select (change)=\"configSelectionChanged($event);\" [ngModel]=\"action.name\" *ngIf=\"!action.isSeparateOrCombineMode\">\n        <option *ngFor=\"let actionConfig of getActionConfigs()\" [attr.actionIndex]=\"actionIndex\"\n                        [attr.value]=\"actionConfig.name\">{{ actionConfig.name }}</option>\n      </select>\n\n      <div class=\"clear\"></div>\n    </div>\n\n    <div class=\"form-group argument\" *ngFor=\"let argConfig of action.config.arguments; let argValIndex = index\">\n      <div *ngIf=\"!isIndexArg(argConfig.name, argValIndex)\">\n        <label style=\"\">{{ getLabel(argConfig.name) }}</label>\n        <div *ngIf=\"argConfig.values != null && argConfig.values.length > 0; else textInput\">\n          <select (change)=\"actionConfigParamSelectionChanged($event);\" [ngModel]=\"getActionConfigParamVDefault(argConfig, actionIndex, argValIndex)\">\n            <option *ngFor=\"let actionConfigParamVal of getActionConfigParamValues(argConfig)\" [attr.argValIndex]=\"argValIndex\"\n                           [attr.actionIndex]=\"actionIndex\" [attr.value]=\"actionConfigParamVal\">{{ actionConfigParamVal }}</option>\n          </select>\n        </div>\n        <ng-template #textInput>\n          <label style=\"\">{{ argConfig.name }}</label>\n          <input type=\"text\" class=\"input-{{argConfig.name}}\" [(ngModel)]=\"action.getArgumentValue(argConfig.name).value\"\n            (change)=\"actionConfigParamSelectionChanged($event)\"/>\n        </ng-template>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":3}}]}],"mappedField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":3}}]}],"isSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":3}}]}],"fieldPair":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":3}}]}],"getMappedFieldActions":[{"__symbolic":"method"}],"isIndexArg":[{"__symbolic":"method"}],"actionsExistForField":[{"__symbolic":"method"}],"getActionConfigs":[{"__symbolic":"method"}],"getActionConfigParamValues":[{"__symbolic":"method"}],"removeAction":[{"__symbolic":"method"}],"validateActionConfigParamSelection":[{"__symbolic":"method"}],"actionConfigParamSelectionChanged":[{"__symbolic":"method"}],"configSelectionChanged":[{"__symbolic":"method"}],"getLabel":[{"__symbolic":"method"}],"getActionConfigParamVDefault":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":26,"character":1},"arguments":[{"selector":"mapping-field-detail","template":"<!-- our template for type ahead -->\n<ng-template #typeaheadTemplate let-model=\"item\" let-index=\"index\">\n<h5 style=\"font-style: italic;\">{{ model['field'].docDef == null ?\n  'Not yet defined' : model['field'].docDef.name }}</h5>\n<h5>{{ model['field'].path }}</h5>\n</ng-template>\n\n<!-- our template for tooltip popover -->\n<ng-template #tolTemplate>\n<div class=\"fieldDetailTooltip\">\n  <label class=\"parentObjectName\" *ngIf=\"displayParentObject()\">\n    <i [ngClass]=\"sourceIconCSSClass\"></i> {{ parentObjectName }}\n  </label>\n  <label>{{ getFieldPath() }}</label>\n  <label *ngIf=\"displayParentObject() && mappedField.field.type\">({{ mappedField.field.type }})</label>\n  <div class=\"clear\"></div>\n</div>\n</ng-template>\n\n<div class=\"fieldDetail\" style=\"white-space: nowrap;\" *ngIf=\"mappedField\">\n\n  <label class=\"parentObjectName\" style=\"float: left;\" *ngIf=\"displayParentObject()\">\n    <i [ngClass]=\"sourceIconCSSClass\"></i> {{ parentObjectName }} <span\n\t  class=\"pficon pficon-info\" [tooltip]=\"tolTemplate\" placement=\"left\"></span>\n  </label>\n\n  <label style=\"float: left; padding-left: 20px; font-style: italic;\"\n    tooltip=\"To change the index ordinal value, drag and drop to the desired position.\"\n    *ngIf=\"hasActionIndex(mappedField)\">Index: </label>\n\n  <div style=\"float: left; font-size: 100%; padding-left: 5px; font-weight: bold; color: green; width: 35px;\"\n\t*ngIf=\"hasActionIndex(mappedField)\">\n    <div *ngIf=\"mappedField.isPadField(); else textInput\">\n      <label style=\"font-size: 110%; color: dark-gray;\n        text-align: right;\"\n        tooltip=\"This pad field has been automatically created to represent indexing gaps.\">{{ getActionIndex(mappedField) }}</label>\n    </div>\n    <ng-template #textInput>\n      <input type=\"text\" id=\"{{inputId}}\" placement=\"right\"\n\t    style=\"font-size: 110%; font-weight: bold; color: green; text-align: right; height: 20px\"\n        [ngModel]=\"getActionIndex(mappedField)\" typeaheadWaitMs=\"400\"\n        (change)=\"indexSelectionChanged($event, mappedField)\"\n        tooltip=\"You may edit the index for this element directly.  Placeholders may be automatically inserted to account for any gaps in the indexing.\">\n    </ng-template>\n  </div>\n\n  <div class=\"pull-right\" style=\"margin-right: 5px;\">\n    <i class=\"fa fa-trash link\" aria-hidden=\"true\" (click)=\"removeMappedField(mappedField)\"\n      tooltip=\"Remove mapping\" placement=\"left\"></i>\n  </div>\n\n  <div style=\"float: right; padding-right: 5px;\" *ngIf=\"isTransformCapable()\">\n    <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" (click)=\"addTransformation()\"\n      tooltip=\"Add transformation\" placement=\"left\"></i>\n  </div>\n\n  <div class=\"clear\"></div>\n\n  <div style=\"width: 100%;\" *ngIf=\"!mappedField.isPadField()\">\n    <input type=\"text\" id=\"{{inputId}}\" [ngModel]=\"mappedField.field.getFieldLabel(cfg.showTypes, false)\"\n      [typeahead]=\"dataSource\" typeaheadWaitMs=\"200\" (typeaheadOnSelect)=\"selectionChanged($event)\"\n      typeaheadOptionField=\"displayName\" [typeaheadItemTemplate]=\"typeaheadTemplate\" placeholder=\"Search\">\n  </div>\n</div>\n"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":97,"character":3}}]}],"fieldPair":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":98,"character":3}}]}],"isSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":99,"character":3}}]}],"mappedField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":100,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"isTransformCapable":[{"__symbolic":"method"}],"addTransformation":[{"__symbolic":"method"}],"getFieldPath":[{"__symbolic":"method"}],"displayParentObject":[{"__symbolic":"method"}],"indexSelectionChanged":[{"__symbolic":"method"}],"selectionChanged":[{"__symbolic":"method"}],"removeMappedField":[{"__symbolic":"method"}],"getActionIndex":[{"__symbolic":"method"}],"hasActionIndex":[{"__symbolic":"method"}],"executeSearch":[{"__symbolic":"method"}],"updateTemplateValues":[{"__symbolic":"method"}],"getInputId":[{"__symbolic":"method"}],"getSourceIconCSSClass":[{"__symbolic":"method"}],"getParentObjectName":[{"__symbolic":"method"}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":30,"character":1},"arguments":[{"selector":"document-field-detail","template":"<div class=\"DocumentFieldDetailComponent\" [attr.id]=\"field.name\" #fieldDetailElement on-mouseover='handleMouseOver($event)'\n  *ngIf=\"fieldShouldBeVisible()\" [attr.draggable]=\"field.isTerminal()\" (dragstart)=\"startDrag($event)\" (drop)=\"endDrag($event)\"\n  (dragenter)=\"dragEnterLeave($event, true)\" (dragleave)=\"dragEnterLeave($event, false)\" (dragover)=\"allowDrop($event)\">\n  <div [attr.class]='getCssClass()' (click)=\"handleMouseClick($event)\" *ngIf=\"field.visibleInCurrentDocumentSearch\">\n    <div style=\"float:left;\">\n      <div style=\"display:inline-block; width:24px;\" *ngIf=\"!field.isSource()\">\n        <i [attr.class]='getMappingClass()'></i>\n        <i [attr.class]='getTransformationClass()'></i>\n      </div>\n      <div class=\"spacer\" [attr.style]=\"getSpacerWidth()\">&nbsp;</div>\n      <div *ngIf=\"!field.isTerminal()\" style=\"display:inline-block;\">\n        <i [attr.class]=\"getParentToggleClass()\"></i>\n        <i *ngIf=\"!field.isCollection\" class=\"fa fa-folder parentFolder\"></i>\n        <i *ngIf=\"field.isCollection\" class=\"fa fa-list-ul parentFolder\"></i>\n      </div>\n      <div *ngIf=\"field.isTerminal()\" style=\"display:inline-block;\">\n        <i [attr.class]=\"getFieldTypeIcon()\"></i>\n      </div>\n    </div>\n    <div style=\"display:inline-block; width:5px\">&nbsp;</div>\n    <div *ngIf=\"!field.docDef.populateChildren(field); else selectable\" style=\"display:inline-block; color: gray;\">\n      <label>{{ field.getFieldLabel(cfg.showTypes, false) }}</label>\n    </div>\n\n    <ng-template #selectable>\n      <label>{{ field.getFieldLabel(cfg.showTypes, false) }}</label>\n    </ng-template>\n\n    <div style=\"float:right; width:24px; text-align:right;\" *ngIf=\"field.isSource()\">\n      <i [attr.class]='getTransformationClass()'></i>\n      <i [attr.class]='getMappingClass()'></i>\n    </div>\n    <div class=\"propertyFieldIcons\" style=\"float:right; text-align:right\" *ngIf=\"field.userCreated\">\n      <i class=\"fa fa-edit link\" aria-hidden=\"true\" (click)=\"editField($event);\"></i>\n      <i class=\"fa fa-trash link\" aria-hidden=\"true\" (click)=\"removeField($event);\"></i>\n    </div>\n    <div class=\"clear\"></div>\n\n    <div *ngIf=\"field.isTerminal() && cfg.showMappingPreview && field.selected\">\n      <table style=\"width:100%; margin-top:5px;\">\n        <tr>\n          <td style=\"width:12px;\"></td>\n          <td>\n            <textarea *ngIf=\"field.isSource()\" rows=\"1\" id=\"preview-source\" class=\"form-control previewSourceTextarea\" [(ngModel)]='field.value'\n              (blur)=\"cfg.mappingService.notifyMappingUpdated()\" placeholder=\"Type sample data here\"></textarea>\n            <div *ngIf=\"!field.isSource()\">\n              <table style=\"width:100%\">\n                <tr>\n                  <td>\n                    <label>\n                      <b>Preview Results</b>\n                    </label>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <div class=\"previewResultContainer\">\n                      <textarea rows=\"1\" class=\"form-control\" id=\"preview-target\" readonly placeholder=\"Results will be displayed here\" [(ngModel)]='field.value'></textarea>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          </td>\n        </tr>\n      </table>\n    </div>\n    <div class=\"clear\"></div>\n  </div>\n\n  <div class=\"childrenFields\" *ngIf=\"!field.isTerminal() && !field.collapsed\">\n    <document-field-detail #fieldDetail *ngFor=\"let f of field.children\" [field]=\"f\" [lineMachine]=\"lineMachine\" [modalWindow]=\"modalWindow\"\n      [cfg]=\"cfg\"></document-field-detail>\n  </div>\n</div>"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":110,"character":3}}]}],"field":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":111,"character":3}}]}],"lineMachine":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":112,"character":3}}]}],"modalWindow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":113,"character":3}}]}],"fieldDetailElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":115,"character":3},"arguments":["fieldDetailElement"]}]}],"fieldComponents":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":116,"character":3},"arguments":["fieldDetail"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer","line":120,"character":33}]}],"startDrag":[{"__symbolic":"method"}],"dragEnterLeave":[{"__symbolic":"method"}],"allowDrop":[{"__symbolic":"method"}],"endDrag":[{"__symbolic":"method"}],"getFieldTypeIcon":[{"__symbolic":"method"}],"fieldShouldBeVisible":[{"__symbolic":"method"}],"getTransformationClass":[{"__symbolic":"method"}],"getMappingClass":[{"__symbolic":"method"}],"getCssClass":[{"__symbolic":"method"}],"getElementPosition":[{"__symbolic":"method"}],"handleMouseOver":[{"__symbolic":"method"}],"getParentToggleClass":[{"__symbolic":"method"}],"handleMouseClick":[{"__symbolic":"method"}],"getFieldDetailComponent":[{"__symbolic":"method"}],"editField":[{"__symbolic":"method"}],"removeField":[{"__symbolic":"method"}],"getSpacerWidth":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"data-mapper-error","template":"<div class=\"DataMapperErrorComponent\" *ngIf=\"errorService\">\n  <div class=\"alert alert-danger\" *ngFor=\"let e of getErrors()\">\n    <a class=\"close\" (click)=\"handleClick($event)\">\n      <i class=\"fa fa-close\" attr.errorIdentifier=\"{{e.identifier}}\"></i>\n    </a>\n    <span class=\"pficon pficon-error-circle-o\"></span>\n    {{ e.message }}\n  </div>\n\n  <div class=\"alert alert-warning\" *ngFor=\"let w of getWarnings()\">\n    <a class=\"close\" (click)=\"handleClick($event)\">\n      <i class=\"fa fa-close\" attr.errorIdentifier=\"{{w.identifier}}\"></i>\n    </a>\n    <span class=\"pficon pficon-warning-triangle-o\"></span>\n    {{ w.message }}\n  </div>  \n\n  <alert *ngFor=\"let i of getInfos()\" type=\"info\" dismissOnTimeout=\"8000\" (onClose)=\"handleAlertClose(i)\">\n    <span class=\"pficon pficon-info\"></span>\n    {{ i.message }}\n  </alert>\n\n</div>"}]}],"members":{"errorService":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":50,"character":3}}]}],"isValidation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":3}}]}],"getErrors":[{"__symbolic":"method"}],"getWarnings":[{"__symbolic":"method"}],"getInfos":[{"__symbolic":"method"}],"handleClick":[{"__symbolic":"method"}],"handleAlertClose":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"transition-selection","template":"<div class=\"mappingFieldContainer TransitionSelection\" *ngIf=\"cfg.mappings.activeMapping\">\n  <div class=\"MappingFieldSection\">\n    <div *ngIf=\"modeIsEnum()\" class=\"enumSection\">\n      <label>{{ getMappedValueCount() }} values mapped</label>\n      <i class=\"fa fa-edit link\" (click)=\"showLookupTable()\"></i>\n    </div>\n    <div *ngIf=\"!modeIsEnum()\">\n      <label>Action</label>\n      <form [formGroup]=\"selectActionForm\">\n        <select id=\"selectAction\" formControlName=\"selectAction\" (change)=\"selectionChanged($event);\" selector=\"mode\" [ngModel]=\"fieldPair.transition.mode\">\n          <option value=\"{{modes.COMBINE}}\">Combine</option>\n          <option value=\"{{modes.MAP}}\">Map</option>\n          <option value=\"{{modes.SEPARATE}}\">Separate</option>\n        </select>\n      </form>\n      <div class=\"clear\"></div>\n    </div>\n    <div *ngIf=\"fieldPair.transition.isSeparateMode() || fieldPair.transition.isCombineMode()\" style=\"margin-top:10px;\">\n      <label>Separator</label>\n      <select id=\"select-separator\" (change)=\"selectionChanged($event);\" selector=\"separator\" [ngModel]=\"fieldPair.transition.delimiter\">\n        <ng-container *ngFor=\"let delimiter of delimiters\">\n          <option *ngIf=\"modeIsSupported(delimiter)\" value=\"{{delimiter.delimiter}}\">{{ delimiter.prettyName }}</option>\n        </ng-container>\n      </select>\n    </div>\n  </div>\n</div>"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":3}}]}],"modalWindow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":3}}]}],"fieldPair":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"validModeTransition":[{"__symbolic":"method"}],"selectionChanged":[{"__symbolic":"method"}],"modeIsEnum":[{"__symbolic":"method"}],"getMappedValueCount":[{"__symbolic":"method"}],"showLookupTable":[{"__symbolic":"method"}],"modeIsSupported":[{"__symbolic":"method"}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":36,"character":1},"arguments":[{"selector":"line-machine","template":"<div class=\"LineMachineComponent\" #lineMachineElement on-mousemove=\"drawLine($event)\" style=\"height:100%; margin-top:6%;\">\n  <svg style=\"width:100%; height:100%;\">\n    <defs>\n      <linearGradient id='line-gradient-active' gradientUnits=\"userSpaceOnUse\">\n        <stop stop-color='#0088ce' />\n        <stop offset='100%' stop-color='#0088ce' />\n        <!-- was #bee1f4 -->\n      </linearGradient>\n      <linearGradient id='line-gradient-dormant' gradientUnits=\"userSpaceOnUse\">\n        <stop stop-color='#8b8d8f' />\n        <stop offset='100%' stop-color='#8b8d8f' />\n        <!-- was #EEEEEE -->\n      </linearGradient>\n    </defs>\n    <svg:line *ngFor=\"let l of lines\" [attr.x1]=\"l.sourceX\" [attr.y1]=\"l.sourceY\" [attr.x2]=\"l.targetX\" [attr.y2]=\"l.targetY\"\n      shape-rendering=\"optimizeQuality\" [attr.style]=\"l.style\"></svg:line>\n    <svg:line *ngIf=\"lineBeingFormed && lineBeingFormed.targetY\" [attr.x1]=\"lineBeingFormed.sourceX\" [attr.y1]=\"lineBeingFormed.sourceY\"\n      [attr.x2]=\"lineBeingFormed.targetX\" [attr.y2]=\"lineBeingFormed.targetY\" shape-rendering=\"optimizeQuality\" [attr.style]=\"lineBeingFormed.style\"></svg:line>\n  </svg>\n</div>"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":3}}]}],"docDefInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":62,"character":3}}]}],"docDefOutput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":3}}]}],"lineMachineElement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":70,"character":3},"arguments":["lineMachineElement"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer","line":75,"character":33},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":75,"character":64}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"handleRedrawMappingLinesEvent":[{"__symbolic":"method"}],"addLineFromParams":[{"__symbolic":"method"}],"addLine":[{"__symbolic":"method"}],"setLineBeingFormed":[{"__symbolic":"method"}],"clearLines":[{"__symbolic":"method"}],"drawLine":[{"__symbolic":"method"}],"drawCurrentLine":[{"__symbolic":"method"}],"handleDocumentFieldMouseOver":[{"__symbolic":"method"}],"mappingChanged":[{"__symbolic":"method"}],"redrawLinesForMappings":[{"__symbolic":"method"}],"createLineStyle":[{"__symbolic":"method"}],"drawLinesForMapping":[{"__symbolic":"method"}],"getScreenPosForField":[{"__symbolic":"method"}],"checkFieldEligibiltyForLineDrawing":[{"__symbolic":"method"}]}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"mapping-selection","template":"<div class=\"MappingSelectionComponent\" *ngIf=\"mappings\">\n  <div class=\"header\">\n    <div class=\"sourceTargetHeader\">{{ selectedField.isSource() ? 'Source' : 'Target' }}</div>\n    <div class=\"pathHeader\">\n      <div class=\"pathName\">{{ getFormattedOutputPath(selectedField.path, false) }}</div>\n      <div class=\"fieldName\">{{ getFormattedOutputPath(selectedField.path, true) }}</div>\n      <div class=\"clear\"></div>\n    </div>\n    <div class=\"clear\"></div>\n    <button class=\"btn btn-primary addButton\" (click)=\"addMapping()\">\n      <i class=\"fa fa-plus\"></i>Add New Mapping\n    </button>\n  </div>\n  <div class=\"MappingSelectionOptions\">\n    <mapping-selection-section *ngFor=\"let mapping of mappings; let i = index; let odd=odd; let even=even;\" [mapping]=\"mapping\"\n      [outputNumber]=\"i\" [selected]=\"i == 0\" [selectedCallback]=\"selectionChanged\" [selectedFieldIsSource]=\"selectedField.isSource()\"\n      [parentComponent]=\"this\" [isOddRow]=\"odd\" #mappingSection>\n    </mapping-selection-section>\n  </div>\n</div>"}]}],"members":{"sectionComponents":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":55,"character":3},"arguments":["mappingSection"]}]}],"selectionChanged":[{"__symbolic":"method"}],"getFormattedOutputPath":[{"__symbolic":"method"}],"addMapping":[{"__symbolic":"method"}],"getSelectedMapping":[{"__symbolic":"method"}],"getSelectedMappingComponent":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"mapping-selection-section","template":"<div [attr.class]=\"getClass()\" (click)=\"handleMouseClick($event)\">\n  <div class=\"numberWrapper\">\n    <div class=\"number\">{{ outputNumber + 1 }}</div>\n  </div>\n  <div class=\"pathContainer\">\n    <div class=\"fieldPair\" *ngFor=\"let fieldPair of mapping.fieldMappings\">\n      <div class=\"sourceTargetSection sourcePaths\">\n        <label>{{ getSourceTargetLabelText(true, fieldPair) }}</label>\n        <div class=\"paths\" *ngFor=\"let sourceField of fieldPair.sourceFields\">\n          <div class=\"path\">\n            <div class=\"pathName\">\n              <i class=\"fa fa-hdd-o\" aria-hidden=\"true\"></i>\n              {{ getFormattedOutputPath(sourceField.field.path, false) }}\n            </div>\n            <div class=\"fieldName\">{{ getFormattedOutputPath(sourceField.field.path, true) }}</div>\n            <div class=\"clear\"></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"sourceTargetSection targetPaths\">\n        <label>{{ getSourceTargetLabelText(false, fieldPair) }}</label>\n        <div class=\"paths\" *ngFor=\"let targetField of fieldPair.targetFields\">\n          <div class=\"path\">\n            <div class=\"pathName\">\n              <i class=\"fa fa-download\" aria-hidden=\"true\"></i>\n              {{ getFormattedOutputPath(targetField.field.path, false) }}\n            </div>\n            <div class=\"fieldName\">{{ getFormattedOutputPath(targetField.field.path, true) }}</div>\n            <div class=\"clear\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"clear\"></div>\n</div>"}]}],"members":{"outputNumber":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":3}}]}],"mapping":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":62,"character":3}}]}],"selectedCallback":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":3}}]}],"selected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":3}}]}],"selectedFieldIsSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":3}}]}],"parentComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":3}}]}],"isOddRow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":3}}]}],"getClass":[{"__symbolic":"method"}],"getSourceTargetLabelText":[{"__symbolic":"method"}],"getFormattedOutputPath":[{"__symbolic":"method"}],"handleMouseClick":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"toolbar","template":"<div class=\"toolbar clearfix\">\n  <div class=\"toolbar-icons pull-right\">\n    <i class=\"fa fa-plus link\" (click)=\"toolbarButtonClicked('addMapping', $event);\"\n       tooltip=\"Add new mapping\" placement=\"bottom\"></i>\n\n    <i [attr.class]=\"getCSSClass('editTemplate')\" *ngIf=\"targetSupportsTemplate\" (click)=\"toolbarButtonClicked('editTemplate', $event);\"></i>\n    <i [attr.class]=\"getCSSClass('showMappingTable')\" (click)=\"toolbarButtonClicked('showMappingTable', $event);\"\n       tooltip=\"Show/hide mapping table\" placement=\"bottom\"></i>\n\n    <i *ngIf=\"cfg.getFirstXmlDoc(false)\" [attr.class]=\"getCSSClass('showNamespaceTable')\" (click)=\"toolbarButtonClicked('showNamespaceTable', $event);\"\n       tooltip=\"Show/hide namespace table\" placement=\"bottom\"></i>\n\n    <i [attr.class]=\"getCSSClass('showDetails')\" (click)=\"toolbarButtonClicked('showDetails', $event);\" container=\"body\"\n       tooltip=\"Show/hide mapping details\" placement=\"left\"></i>\n\n    <div dropdown #dropdown=\"bs-dropdown\" class=\"dropdown inline-block pull-right\">\n      <i [attr.class]=\"getEditorSettingsCSSClass(dropdown.isOpen)\" dropdownToggle (click)=\"false\"\n\t tooltip=\"Editor settings\" placement=\"left\"></i>\n\n      <ul *dropdownMenu class=\"dropdown-menu dropdown-menu-right\" role=\"menu\">\n        <li role=\"menuitem\" (click)=\"toolbarButtonClicked('showTypes', $event);\" class=\"clearfix\">\n          <div class=\"pull-left\">\n            <a class=\"dropdown-item\" href=\"#\">\n              <i class=\"fa fa-tag\"></i>Show Types\n            </a>\n          </div>\n          <i class=\"fa fa-check\" *ngIf=\"cfg.showTypes\" class=\"pull-right\"></i>\n        </li>\n        <li role=\"menuitem\" (click)=\"toolbarButtonClicked('showLines', $event);\" class=\"clearfix\">\n          <div class=\"pull-left\">\n            <a class=\"dropdown-item\" href=\"#\">\n              <i class=\"fa fa-share-alt\"></i>Show Lines\n            </a>\n          </div>\n          <i class=\"fa fa-check\" *ngIf=\"cfg.showLinesAlways\" class=\"pull-right\"></i>\n        </li>\n        <li role=\"menuitem\" (click)=\"toolbarButtonClicked('showMappedFields', $event);\" class=\"clearfix\">\n          <div class=\"pull-left\">\n            <a class=\"dropdown-item\" href=\"#\">\n              <i class=\"fa fa-chain\"></i>Show Mapped Fields\n            </a>\n          </div>\n          <i class=\"fa fa-check\" *ngIf=\"cfg.showMappedFields\" class=\"pull-right\"></i>\n        </li>\n        <li role=\"menuitem\" (click)=\"toolbarButtonClicked('showUnmappedFields', $event);\" class=\"clearfix\">\n          <div class=\"pull-left\">\n            <a class=\"dropdown-item\" href=\"#\">\n              <i class=\"fa fa-chain-broken\"></i>Show Unmapped Fields\n            </a>\n          </div>\n          <i class=\"fa fa-check\" *ngIf=\"cfg.showUnmappedFields\" class=\"pull-right\"></i>\n        </li>\n\n        <li *ngIf=\"!cfg.initCfg.disableMappingPreviewMode\" role=\"menuitem\" (click)=\"toolbarButtonClicked('showMappingPreview', $event);\" class=\"clearfix\">\n          <div class=\"pull-left\">\n            <a class=\"dropdown-item\" href=\"#\">\n              <i class=\"fa fa-eye\"></i>Show Mapping Preview\n            </a>\n          </div>\n          <i class=\"fa fa-check\" *ngIf=\"cfg.showMappingPreview\" class=\"pull-right\"></i>\n        </li>\n\n      </ul>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":97,"character":3}}]}],"modalWindow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":98,"character":3}}]}],"getCSSClass":[{"__symbolic":"method"}],"getEditorSettingsCSSClass":[{"__symbolic":"method"}],"toolbarButtonClicked":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"editTemplate":[{"__symbolic":"method"}]}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":30,"character":1},"arguments":[{"selector":"lookup-table","template":"<div class=\"LookupTableComponent\" *ngIf=\"data\">\n  <div class=\"lookupTableRow\" *ngFor=\"let d of data\">\n    <label>{{ d.sourceEnumValue }}</label>\n    <select #outputSelect [ngModel]=\"d.selectedTargetEnumValue\" [attr.sourceValue]=\"d.sourceEnumValue\">\n      <option *ngFor=\"let targetEnumValue of d.targetEnumValues\" [ngValue]=\"targetEnumValue\" [attr.enumvalue]=\"targetEnumValue\">{{ targetEnumValue }}\n      </option>\n    </select>\n  </div>\n</div>"}]}],"members":{"outputSelects":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":49,"character":3},"arguments":["outputSelect"]}]}],"initialize":[{"__symbolic":"method"}],"saveTable":[{"__symbolic":"method"}]}},"ɵt":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"field-edit","template":"<!-- our template for type ahead -->\n<ng-template #typeaheadTemplate let-model=\"item\" let-index=\"index\">\n  <h5 style=\"font-style:italic;\" *ngIf=\"model['field'].docDef\">{{ model['field'].docDef.name }}</h5>\n  <h5>{{ model['field'].path }}</h5>\n</ng-template>\n\n<div class=\"DataMapperEditComponent\">\n  <div class=\"form-group\">\n    <label>Parent</label>\n    <input type=\"text\" [(ngModel)]=\"parentFieldName\" [typeahead]=\"dataSource\" typeaheadWaitMs=\"200\" (typeaheadOnSelect)=\"parentSelectionChanged($event)\"\n      (blur)=\"handleOnBlur($event)\" typeaheadOptionField=\"displayName\" [typeaheadItemTemplate]=\"typeaheadTemplate\" disabled=\"{{editMode}}\">\n  </div>\n  <div class=\"form-group\">\n    <label>Name</label>\n    <input name=\"value\" type=\"text\" [(ngModel)]=\"field.name\" />\n  </div>\n  <div class=\"form-group\" *ngIf=\"isXML\">\n    <label>Namespace</label>\n    <select (change)=\"namespaceSelectionChanged($event);\" [ngModel]=\"namespaceAlias\">\n      <option *ngFor=\"let ns of namespaces\" value=\"{{ns.alias}}\" [selected]=\"namespaceAlias == ns.alias\">\n        {{ ns.getPrettyLabel() }}\n      </option>\n    </select>\n  </div>\n  <div class=\"form-group\" *ngIf=\"isXML\">\n    <label>Field Type</label>\n    <select (change)=\"fieldTypeSelectionChanged($event);\" [ngModel]=\"fieldType\">\n      <option value=\"element\">Element</option>\n      <option value=\"attribute\">Attribute</option>\n    </select>\n  </div>\n  <div class=\"form-group\">\n    <label>Value Type</label>\n    <select (change)=\"valueTypeSelectionChanged($event);\" [ngModel]=\"valueType\">\n      <option value=\"BOOLEAN\">Boolean</option>\n      <option value=\"BYTE\">Byte</option>\n      <option value=\"BYTE_ARRAY\">ByteArray</option>\n      <option value=\"CHAR\">Char</option>\n      <option value=\"COMPLEX\">Complex</option>\n      <option value=\"DECIMAL\">Decimal</option>\n      <option value=\"DOUBLE\">Double</option>\n      <option value=\"FLOAT\">Float</option>\n      <option value=\"INTEGER\">Integer</option>\n      <option value=\"LONG\">Long</option>\n      <option value=\"SHORT\">Short</option>\n      <option value=\"STRING\">String</option>\n      <option value=\"TIME\">Time</option>\n      <option value=\"DATE\">Date</option>\n      <option value=\"DATE_TIME\">DateTime</option>\n      <option value=\"DATE_TZ\">DateTZ</option>\n      <option value=\"TIME_TZ\">TimeTZ</option>\n      <option value=\"DATE_TIME_TZ\">DateTimeTZ</option>\n      <option value=\"UNSIGNED_BYTE\">Unsigned Byte</option>\n      <option value=\"UNSIGNED_INTEGER\">Unsigned Integer</option>\n      <option value=\"UNSIGNED_LONG\">Unsigned Long</option>\n      <option value=\"UNSIGNED_SHORT\">Unsigned Short</option>\n    </select>\n  </div>\n</div>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"initialize":[{"__symbolic":"method"}],"handleOnBlur":[{"__symbolic":"method"}],"parentSelectionChanged":[{"__symbolic":"method"}],"fieldTypeSelectionChanged":[{"__symbolic":"method"}],"valueTypeSelectionChanged":[{"__symbolic":"method"}],"namespaceSelectionChanged":[{"__symbolic":"method"}],"executeSearch":[{"__symbolic":"method"}],"getField":[{"__symbolic":"method"}],"isDataValid":[{"__symbolic":"method"}]}},"ɵu":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"namespace-edit","template":"<div class=\"PropertyEditFieldComponent\">\n  <div class=\"form-group\">\n    <label>Alias</label>\n    <input type=\"text\" [(ngModel)]=\"namespace.alias\" disabled=\"{{namespace.isTarget || !namespace.createdByUser}}\">\n  </div>\n  <div class=\"form-group\">\n    <label>URI</label>\n    <input type=\"text\" [(ngModel)]=\"namespace.uri\" />\n  </div>\n  <div class=\"form-group\">\n    <label>Location URI</label>\n    <input type=\"text\" [(ngModel)]=\"namespace.locationUri\" />\n  </div>\n  <div class=\"form-group\">\n    <label>Type</label>\n    <input type=\"checkbox\" [ngModel]=\"namespace.isTarget\" style=\"width:20px; vertical-align:middle;\" disabled=\"{{!targetEnabled}}\"\n      (click)=\"targetToggled()\" />\n    <label [attr.class]=\"(targetEnabled ? '' : 'disabled')\" style=\"width:105px; \">Target Namespace</label>\n    <div class=\"clear\"></div>\n  </div>\n</div>"}]}],"members":{"initialize":[{"__symbolic":"method"}],"targetToggled":[{"__symbolic":"method"}],"isDataValid":[{"__symbolic":"method"}]}},"ɵv":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"property-field-edit","template":"<div class=\"DataMapperEditComponent\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name:</label>\n    <input name=\"name\" type=\"text\" [(ngModel)]=\"field.name\" class=\"form-control\" id=\"name\" required/>\n    <small [hidden]=\"!nameExistsOnCreation()\" class=\"text-danger\">\n      Property name already exists, please select a unique name.\n    </small>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"value\">Value:</label>\n    <input name=\"value\" type=\"text\" [(ngModel)]=\"field.value\" class=\"form-control\" id=\"value\" required/>\n    <small [hidden]=\"(field.name == null && field.value == null) ||\n      (field.name != null && field.value != null && field.value.length > 0)\" class=\"text-info\">\n      A property value must be specified.\n    </small>\n  </div>\n  <div class=\"form-group\">\n    <label>Value Type</label>\n    <select (change)=\"valueTypeSelectionChanged($event);\" [ngModel]=\"valueType\">\n      <option value=\"ANY\">ANY</option>\n      <option value=\"BIG_INTEGER\">Big Integer</option>\n      <option value=\"BOOLEAN\">Boolean</option>\n      <option value=\"BYTE\">Byte</option>\n      <option value=\"BYTE_ARRAY\">ByteArray</option>\n      <option value=\"CHAR\">Char</option>\n      <option value=\"COMPLEX\">Complex</option>\n      <option value=\"DECIMAL\">Decimal</option>\n      <option value=\"DOUBLE\">Double</option>\n      <option value=\"FLOAT\">Float</option>\n      <option value=\"INTEGER\">Integer</option>\n      <option value=\"LONG\">Long</option>\n      <option value=\"SHORT\">Short</option>\n      <option value=\"STRING\">String</option>\n      <option value=\"TIME\">Time</option>\n      <option value=\"DATE\">Date</option>\n      <option value=\"DATE_TIME\">DateTime</option>\n      <option value=\"DATE_TZ\">DateTZ</option>\n      <option value=\"TIME_TZ\">TimeTZ</option>\n      <option value=\"DATE_TIME_TZ\">DateTimeTZ</option>\n      <option value=\"UNSIGNED_BYTE\">Unsigned Byte</option>\n      <option value=\"UNSIGNED_INTEGER\">Unsigned Integer</option>\n      <option value=\"UNSIGNED_LONG\">Unsigned Long</option>\n      <option value=\"UNSIGNED_SHORT\">Unsigned Short</option>\n    </select>\n  </div>\n</div>"}]}],"members":{"initialize":[{"__symbolic":"method"}],"valueTypeSelectionChanged":[{"__symbolic":"method"}],"getField":[{"__symbolic":"method"}],"isDataValid":[{"__symbolic":"method"}],"nameExistsOnCreation":[{"__symbolic":"method"}]}},"ɵw":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":25,"character":1},"arguments":[{"selector":"constant-field-edit","template":"<div class=\"DataMapperEditComponent\">\n  <div class=\"form-group\">\n    <label for=\"value\">Value:</label>\n    <input name=\"value\" type=\"text\" [(ngModel)]=\"field.value\" class=\"form-control\" id=\"name\" required/>\n    <small [hidden]=\"!valueExistsOnCreation()\" class=\"text-danger\">\n      Constant value already exists.\n    </small>\n  </div>\n  <div class=\"form-group\">\n    <label>Value Type</label>\n    <select (change)=\"valueTypeSelectionChanged($event);\" [ngModel]=\"valueType\">\n      <option value=\"BOOLEAN\">Boolean</option>\n      <option value=\"BIG_INTEGER\">Big Integer</option>\n      <option value=\"BYTE\">Byte</option>\n      <option value=\"BYTE_ARRAY\">ByteArray</option>\n      <option value=\"CHAR\">Char</option>\n      <option value=\"COMPLEX\">Complex</option>\n      <option value=\"DECIMAL\">Decimal</option>\n      <option value=\"DOUBLE\">Double</option>\n      <option value=\"FLOAT\">Float</option>\n      <option value=\"INTEGER\">Integer</option>\n      <option value=\"LONG\">Long</option>\n      <option value=\"SHORT\">Short</option>\n      <option value=\"STRING\">String</option>\n      <option value=\"TIME\">Time</option>\n      <option value=\"DATE\">Date</option>\n      <option value=\"DATE_TIME\">DateTime</option>\n      <option value=\"DATE_TZ\">DateTZ</option>\n      <option value=\"TIME_TZ\">TimeTZ</option>\n      <option value=\"DATE_TIME_TZ\">DateTimeTZ</option>\n      <option value=\"UNSIGNED_BYTE\">Unsigned Byte</option>\n      <option value=\"UNSIGNED_INTEGER\">Unsigned Integer</option>\n      <option value=\"UNSIGNED_LONG\">Unsigned Long</option>\n      <option value=\"UNSIGNED_SHORT\">Unsigned Short</option>\n    </select>\n  </div>\n</div>"}]}],"members":{"initialize":[{"__symbolic":"method"}],"valueTypeSelectionChanged":[{"__symbolic":"method"}],"getField":[{"__symbolic":"method"}],"isDataValid":[{"__symbolic":"method"}],"valueExistsOnCreation":[{"__symbolic":"method"}]}},"ɵx":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"collapsable-header","template":"<div class=\"CollapsableCardHeader\" (click)=\"handleMouseClick($event)\">\n  <h2 class=\"card-pf-title\">\n    <i [attr.class]=\"getCSSClass()\"></i>{{ title }}</h2>\n</div>"}]}],"members":{"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"collapsed":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":3}}]}],"handleMouseClick":[{"__symbolic":"method"}],"getCSSClass":[{"__symbolic":"method"}]}},"ɵy":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":23,"character":1},"arguments":[{"selector":"mapping-list","template":"<div class=\"dataMapperItemList mappingList\">\n  <div class=\"card-pf\">\n    <div class=\"card-pf-heading\">\n      <h2 class=\"card-pf-title\">\n        <div class=\"name\">\n          <i class=\"fa fa-table\"></i>\n          <label>Mappings</label>\n        </div>\n        <i (click)=\"toggleSearch()\" [attr.class]=\"getSearchIconCSSClass()\"></i>\n        <div class=\"clear\"></div>\n      </h2>\n      <div class=\"searchHeaderWrapper\">\n        <div *ngIf=\"searchMode\" class=\"searchBox\">\n          <input type=\"text\" #searchFilterBox id=\"search-filter-box\" [(ngModel)]=\"searchFilter\" (keyup)=\"search(searchFilterBox.value)\"\n            placeholder=\"Search\" [focus]=\"true\" />\n          <i class=\"fa fa-close searchBoxCloseIcon link\" (click)=\"toggleSearch()\"></i>\n          <div class=\"clear\"></div>\n        </div>\n        <div [attr.class]=\"getRowTitleCSSClass()\">\n          <label class=\"sources\">\n            <i class=\"fa fa-hdd-o\"></i>Sources</label>\n          <label class=\"targets\">\n            <i class=\"fa fa-download\"></i>Targets</label>\n          <label class=\"type\">\n            <i class=\"fa fa-sliders\"></i>Type</label>\n          <div class=\"clear\"></div>\n        </div>\n        <div class=\"clear\"></div>\n      </div>\n    </div>\n    <div [attr.class]=\"getItemsCSSClass()\">\n      <div [attr.class]=\"getMappingRowsCSSClass()\">\n        <div *ngFor=\"let mapping of getMappings(); let index=index;\" [attr.class]=\"getMappingCSSClass(mapping, index)\" (click)=\"selectMapping(mapping)\">\n          <div *ngFor=\"let fieldPair of mapping.fieldMappings\" class=\"itemRow\">\n            <div class=\"sourceFieldNames fieldNames\">\n              <mapping-list-field *ngFor=\"let mappedField of getMappedFields(fieldPair, true)\" [mappedField]=\"mappedField\" [isSource]=\"true\"\n                [cfg]=\"cfg\"></mapping-list-field>\n              <div class=\"clear\"></div>\n            </div>\n            <div class=\"targetFieldNames fieldNames\">\n              <mapping-list-field *ngFor=\"let mappedField of getMappedFields(fieldPair, false)\" [mappedField]=\"mappedField\" [isSource]=\"false\"\n                [cfg]=\"cfg\"></mapping-list-field>\n              <div class=\"clear\"></div>\n            </div>\n            <div class=\"transition\">\n              <label>{{ fieldPair.transition.getPrettyName() }}</label>\n              <div class=\"clear\"></div>\n            </div>\n            <div class=\"error\">\n              <span class=\"pficon\" [ngClass]=\"mapping.validationErrors | toErrorIconClass\" *ngIf=\"mapping.validationErrors.length\"></span>\n            </div>\n            <div class=\"clear\"></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"noSearchResults\" *ngIf=\"searchResultsVisible()\">\n        <label>No search results.</label>\n        <div class=\"clear\"></div>\n      </div>\n    </div>\n    <div class=\"card-pf-heading itemCount\">{{ cfg.mappings.mappings.length }} mappings</div>\n    <div class=\"clear\"></div>\n  </div>\n</div>"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":92,"character":3}}]}],"getItemsCSSClass":[{"__symbolic":"method"}],"searchResultsVisible":[{"__symbolic":"method"}],"getMappingCSSClass":[{"__symbolic":"method"}],"selectMapping":[{"__symbolic":"method"}],"getRowTitleCSSClass":[{"__symbolic":"method"}],"getMappingRowsCSSClass":[{"__symbolic":"method"}],"getMappings":[{"__symbolic":"method"}],"getMappedFields":[{"__symbolic":"method"}],"toggleSearch":[{"__symbolic":"method"}],"getSearchIconCSSClass":[{"__symbolic":"method"}],"fieldPairMatchesSearch":[{"__symbolic":"method"}],"search":[{"__symbolic":"method"}]}},"ɵz":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"mapping-list-field","template":"<ng-template #tolTemplate>\n  <div class=\"fieldDetailTooltip\" *ngIf=\"displayParentObject()\">\n    <label class=\"parentObjectName\">\n      <i [attr.class]=\"isSource ? 'fa fa-hdd-o' : 'fa fa-download'\"></i>\n      {{ getParentObjectName() }}\n    </label>\n    <label>{{ getFieldPath() }}</label>\n    <label *ngIf=\"displayParentObject() && mappedField.field.type\">({{ mappedField.field.type }})</label>\n    <div class=\"clear\"></div>\n  </div>\n</ng-template>\n\n<table style=\"width:100%; margin-top:3px; margin-bottom:3px\">\n  <tr>\n    <td>\n      <div class=\"float-left\">\n        <label class=\"fieldPath\" [tooltip]=\"tolTemplate\" placement=\"bottom\" [isDisabled]=\"!displayParentObject()\">\n          {{ getFieldPath() }}\n          <i class=\"fa fa-bolt\" *ngIf=\"mappedField.actions.length != 0\"></i>\n        </label>\n      </div>\n    </td>\n  </tr>\n\n  <tr>\n    <td>\n      <div *ngIf=\"cfg.showMappingPreview && mappedField.field.path && mappedField.field.selected\" style=\"width:97%;\">\n        <textarea class=\"form-control previewSourceTextarea\" rows=\"1\" *ngIf=\"isSource\" id=\"preview-source\" [(ngModel)]='mappedField.field.value'\n          (blur)=\"cfg.mappingService.notifyMappingUpdated()\" placeholder=\"Type sample data here\"></textarea>\n        <div *ngIf=\"!isSource\" class=\"previewResultContainer\">\n          <textarea id=\"preview-target\" class=\"form-control\" [(ngModel)]='mappedField.field.value' placeholder=\"Results will be displayed here\"\n            readonly></textarea>\n        </div>\n      </div>\n    </td>\n  </tr>\n</table>"}]}],"members":{"mappedField":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":3}}]}],"isSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":65,"character":3}}]}],"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":3}}]}],"getSourceIconCSSClass":[{"__symbolic":"method"}],"getFieldPath":[{"__symbolic":"method"}],"displayParentObject":[{"__symbolic":"method"}],"getParentObjectName":[{"__symbolic":"method"}]}},"ɵba":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"namespace-list","template":"<div class=\"dataMapperItemList namespaceList\">\n  <div class=\"card-pf\">\n    <div class=\"card-pf-heading\">\n      <h2 class=\"card-pf-title\">\n        <div class=\"name\">\n          <i class=\"fa fa-table\"></i>\n          <label>Namespaces for {{ cfg.getFirstXmlDoc(false).name }}</label>\n        </div>\n        <i (click)=\"toggleSearch()\" [attr.class]=\"getSearchIconCSSClass()\"></i>\n        <i (click)=\"addEditNamespace(null, $event)\" class=\"fa fa-plus link\"></i>\n        <div class=\"clear\"></div>\n      </h2>\n      <div class=\"searchHeaderWrapper\">\n        <div *ngIf=\"searchMode\" class=\"searchBox\">\n          <input type=\"text\" #searchFilterBox id=\"search-filter-box\" [(ngModel)]=\"searchFilter\" (keyup)=\"search(searchFilterBox.value)\"\n            placeholder=\"Search\" [focus]=\"true\" />\n          <i class=\"fa fa-close searchBoxCloseIcon link\" (click)=\"toggleSearch()\"></i>\n          <div class=\"clear\"></div>\n        </div>\n        <div [attr.class]=\"getRowTitleCSSClass()\">\n          <label class=\"alias\">Alias</label>\n          <label class=\"uri\">Uri</label>\n          <label class=\"locationUri\">Location URI</label>\n          <div class=\"clear\"></div>\n        </div>\n        <div class=\"clear\"></div>\n      </div>\n    </div>\n    <div [attr.class]=\"getItemsCSSClass()\">\n      <div [attr.class]=\"getRowsCSSClass()\">\n        <div *ngFor=\"let namespace of getNamespaces(); let index=index;\" [attr.class]=\"getNamespaceCSSClass(namespace, index)\" (click)=\"selectNamespace(namespace)\">\n          <label class=\"alias\">{{ namespace.isTarget ? 'Target (tns)' : namespace.alias }}</label>\n          <label class=\"uri\">{{ namespace.uri }}</label>\n          <label class=\"locationUri\">{{ namespace.locationUri }}</label>\n          <div class=\"actions\" style=\"float:right\">\n            <i class=\"fa fa-edit link\" aria-hidden=\"true\" (click)=\"addEditNamespace(namespace, $event);\"></i>\n            <i class=\"fa fa-trash link\" aria-hidden=\"true\" (click)=\"removeNamespace(namespace, $event);\"></i>\n          </div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n      <div class=\"noSearchResults\" *ngIf=\"searchResultsVisible()\">\n        <label>No search results.</label>\n        <div class=\"clear\"></div>\n      </div>\n    </div>\n    <div class=\"card-pf-heading itemCount\">{{ getNamespaces().length }} namespaces</div>\n    <div class=\"clear\"></div>\n  </div>\n</div>"}]}],"members":{"cfg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":79,"character":3}}]}],"modalWindow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":80,"character":3}}]}],"getNamespaceCSSClass":[{"__symbolic":"method"}],"searchResultsVisible":[{"__symbolic":"method"}],"selectNamespace":[{"__symbolic":"method"}],"getItemsCSSClass":[{"__symbolic":"method"}],"getRowTitleCSSClass":[{"__symbolic":"method"}],"getRowsCSSClass":[{"__symbolic":"method"}],"getNamespaces":[{"__symbolic":"method"}],"addEditNamespace":[{"__symbolic":"method"}],"toggleSearch":[{"__symbolic":"method"}],"getSearchIconCSSClass":[{"__symbolic":"method"}],"namespaceMatchesSearch":[{"__symbolic":"method"}],"removeNamespace":[{"__symbolic":"method"}],"search":[{"__symbolic":"method"}]}},"ɵbb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"template-edit","template":"<div class=\"DataMapperEditComponent\">\n  <div class=\"form-group\">\n    <textarea [(ngModel)]=\"templateText\" rows=\"16\" cols=\"100\"></textarea>\n  </div>\n</div>"}]}],"members":{"isDataValid":[{"__symbolic":"method"}]}},"ɵbc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[focus]"}]}],"members":{"focus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":7,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":10,"character":34}]}],"ngAfterContentChecked":[{"__symbolic":"method"}]}},"ɵbd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":3,"character":1},"arguments":[{"name":"toErrorIconClass"}]}],"members":{"transform":[{"__symbolic":"method"}]}}},"origins":{"DataMapperModule":"./src/app/lib/atlasmap-data-mapper/data-mapper.module","ApiXsrfInterceptor":"./src/app/lib/atlasmap-data-mapper/services/api-xsrf-interceptor.service","ErrorHandlerService":"./src/app/lib/atlasmap-data-mapper/services/error-handler.service","DocumentManagementService":"./src/app/lib/atlasmap-data-mapper/services/document-management.service","MappingManagementService":"./src/app/lib/atlasmap-data-mapper/services/mapping-management.service","InitializationService":"./src/app/lib/atlasmap-data-mapper/services/initialization.service","DocumentDefinition":"./src/app/lib/atlasmap-data-mapper/models/document-definition.model","MappingDefinition":"./src/app/lib/atlasmap-data-mapper/models/mapping-definition.model","DocumentType":"./src/app/lib/atlasmap-data-mapper/common/config.types","InspectionType":"./src/app/lib/atlasmap-data-mapper/common/config.types","ConfigModel":"./src/app/lib/atlasmap-data-mapper/models/config.model","DocumentInitializationModel":"./src/app/lib/atlasmap-data-mapper/models/config.model","MappingModel":"./src/app/lib/atlasmap-data-mapper/models/mapping.model","MappingSerializer":"./src/app/lib/atlasmap-data-mapper/services/mapping-serializer.service","DataMapperAppComponent":"./src/app/lib/atlasmap-data-mapper/components/data-mapper-app.component","ɵa":"./src/environments/environment","ɵb":"./src/app/lib/atlasmap-data-mapper/components/document-definition.component","ɵc":"./src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component","ɵd":"./src/app/lib/atlasmap-data-mapper/components/mapping/simple-mapping.component","ɵe":"./src/app/lib/atlasmap-data-mapper/components/mapping/collection-mapping.component","ɵf":"./src/app/lib/atlasmap-data-mapper/components/mapping/mapping-pair-detail.component","ɵg":"./src/app/lib/atlasmap-data-mapper/components/modal-window.component","ɵh":"./src/app/lib/atlasmap-data-mapper/components/modal-window.component","ɵi":"./src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component","ɵj":"./src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component","ɵk":"./src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component","ɵl":"./src/app/lib/atlasmap-data-mapper/components/document-field-detail.component","ɵm":"./src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component","ɵn":"./src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component","ɵo":"./src/app/lib/atlasmap-data-mapper/components/line-machine.component","ɵp":"./src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component","ɵq":"./src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component","ɵr":"./src/app/lib/atlasmap-data-mapper/components/toolbar.component","ɵs":"./src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component","ɵt":"./src/app/lib/atlasmap-data-mapper/components/field-edit.component","ɵu":"./src/app/lib/atlasmap-data-mapper/components/namespace-edit.component","ɵv":"./src/app/lib/atlasmap-data-mapper/components/property-field-edit.component","ɵw":"./src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component","ɵx":"./src/app/lib/atlasmap-data-mapper/components/collapsable-header.component","ɵy":"./src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component","ɵz":"./src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component","ɵba":"./src/app/lib/atlasmap-data-mapper/components/namespace-list.component","ɵbb":"./src/app/lib/atlasmap-data-mapper/components/template-edit.component","ɵbc":"./src/app/lib/atlasmap-data-mapper/common/focus.directive","ɵbd":"./src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe"},"importAs":"@atlasmap/atlasmap-data-mapper"}